(function(){var e={4395:function(e,t,r){"use strict";var n={};r.r(n),r.d(n,{Account:function(){return mi},ByteCode:function(){return Pi},Channel:function(){return Ei},ChannelCloseMutualTx:function(){return ts},ChannelCloseSoloTx:function(){return rs},ChannelCreateTx:function(){return Ji},ChannelDepositTx:function(){return Yi},ChannelForceProgressTx:function(){return es},ChannelSetDelegatesTx:function(){return ss},ChannelSettleTx:function(){return as},ChannelSlashTx:function(){return ns},ChannelSnapshotSoloTx:function(){return is},ChannelWithdrawTx:function(){return Xi},CheckTxInPoolResponse:function(){return Ss},CommitmentId:function(){return Qi},ContractCallObject:function(){return wi},ContractCallTx:function(){return hs},ContractCreateTx:function(){return ps},ContractObject:function(){return qi},CountResponse:function(){return di},CreateContractUnsignedTx:function(){return xs},Delegates:function(){return ii},DryRunAccount:function(){return yi},DryRunCallContext:function(){return Ni},DryRunCallReq:function(){return fi},DryRunInput:function(){return hi},DryRunInputItem:function(){return gi},DryRunResult:function(){return Si},DryRunResults:function(){return Ci},EncodedTx:function(){return bi},ErrorModel:function(){return Ja},Event:function(){return zi},GAAttachTx:function(){return fs},GAMetaTx:function(){return Ns},GAObject:function(){return Ti},Generation:function(){return ui},HashResponse:function(){return Xa},Header:function(){return La},HeightResponse:function(){return ei},KeyBlock:function(){return Ya},MicroBlockHeader:function(){return ti},NameClaimTx:function(){return Ui},NameEntry:function(){return Oi},NameHash:function(){return Li},NamePointer:function(){return ci},NamePreclaimTx:function(){return Gi},NameRevokeTx:function(){return Ki},NameTransferTx:function(){return Wi},NameUpdateTx:function(){return Zi},NextNonceResponse:function(){return pi},OffChainCallContract:function(){return bs},OffChainDeposit:function(){return vs},OffChainNewContract:function(){return Ts},OffChainTransfer:function(){return ws},OffChainUpdate:function(){return si},OffChainWithdrawal:function(){return zs},OracleExtendTx:function(){return Fi},OracleQueries:function(){return Ii},OracleQuery:function(){return ki},OracleQueryTx:function(){return Hi},OracleRegisterTx:function(){return Vi},OracleRespondTx:function(){return ji},PayingForTx:function(){return Cs},PeerConnections:function(){return $i},PeerCount:function(){return ds},PeerCountAvailable:function(){return ms},PeerCountConnected:function(){return us},PeerDetails:function(){return ls},PeerPubKey:function(){return Mi},Peers:function(){return cs},PoI:function(){return Ai},PostTxResponse:function(){return xi},Protocol:function(){return Bi},PubKey:function(){return os},RegisteredOracle:function(){return _i},RelativeTTL:function(){return oi},SignedTx:function(){return ni},SignedTxs:function(){return ri},SpendTx:function(){return Di},Status:function(){return Ri},TokenSupply:function(){return gs},Ttl:function(){return li},Tx:function(){return ai},TxInfoObject:function(){return vi},UnsignedTx:function(){return ys},discriminators:function(){return qs}});var a={};r.r(a),r.d(a,{InvalidTxError:function(){return Jo},_getPollInterval:function(){return Lo},awaitHeight:function(){return el},getAccount:function(){return nl},getBalance:function(){return al},getContract:function(){return hl},getContractByteCode:function(){return pl},getCurrentGeneration:function(){return il},getGeneration:function(){return sl},getHeight:function(){return Yo},getKeyBlock:function(){return ll},getMicroBlockHeader:function(){return cl},getMicroBlockTransactions:function(){return ol},getName:function(){return yl},poll:function(){return Xo},resolveName:function(){return gl},sendTransaction:function(){return rl},txDryRun:function(){return ml},waitForTxConfirm:function(){return tl}});var i={};r.r(i),r.d(i,{aensBid:function(){return vl},aensClaim:function(){return wl},aensPreclaim:function(){return zl},aensQuery:function(){return Sl},aensRevoke:function(){return fl},aensTransfer:function(){return Cl},aensUpdate:function(){return Nl}});var s={};r.r(s),r.d(s,{payForTransaction:function(){return xl},spend:function(){return Tl},transferFunds:function(){return bl}});var o={};r.r(o),r.d(o,{extendOracleTtl:function(){return Il},getOracleObject:function(){return Ol},getQueryObject:function(){return Al},pollForQueries:function(){return ql},pollForQueryResponse:function(){return Pl},postQueryToOracle:function(){return _l},registerOracle:function(){return El},respondToQuery:function(){return kl}});var l={};r.r(l),r.d(l,{buildAuthTxHash:function(){return nc},buildAuthTxHashByGaMetaTx:function(){return ac},createGeneralizedAccount:function(){return rc}});var c={};r.r(c),r.d(c,{Aci:function(){return Dc},ApiVersion:function(){return rd},ByteCodeInput:function(){return Yc},BytecodeCallResultInput:function(){return Gc},Calldata:function(){return Wc},CompileOpts:function(){return $c},CompileResult:function(){return Hc},CompilerError:function(){return Vc},CompilerVersion:function(){return td},Contract:function(){return Bc},DecodeCalldataBytecode:function(){return Kc},DecodeCalldataSource:function(){return Jc},DecodedCalldata:function(){return Qc},DecodedCallresult:function(){return Uc},ErrorModel:function(){return Lc},ErrorPos:function(){return Fc},FateAssembler:function(){return Xc},FunctionCallInput:function(){return Zc},SophiaBinaryData:function(){return nd},SophiaCallResultInput:function(){return jc},SophiaJsonData:function(){return ad},ValidateByteCodeInput:function(){return ed}});var d=r(9963),u=r(6252),m=r(3577);const p=(0,u._)("h2",null,"Wallet Iframe",-1),h={class:"group"},y=(0,u._)("div",null,"Address",-1),g=(0,u._)("div",null,"Node",-1),f=(0,u._)("div",null,"Balance",-1),N=["src"];function C(e,t,r,n,a,i){const s=(0,u.up)("Value");return(0,u.wg)(),(0,u.iD)(u.HY,null,[p,(0,u._)("div",h,[(0,u._)("div",null,[y,(0,u._)("div",null,(0,m.zw)(e.address),1)]),(0,u._)("div",null,[g,(0,u._)("div",null,(0,m.zw)(e.nodeName),1)]),(0,u._)("div",null,[f,(0,u.Wm)(s,{value:e.balancePromise},null,8,["value"])]),(0,u._)("button",{onClick:t[0]||(t[0]=(...e)=>i.switchAccount&&i.switchAccount(...e))},"Switch Account"),(0,u._)("button",{onClick:t[1]||(t[1]=(...e)=>i.switchNode&&i.switchNode(...e))},"Switch Node"),(0,u._)("button",{onClick:t[2]||(t[2]=(...e)=>i.disconnect&&i.disconnect(...e))},"Disconnect")]),e.runningInFrame?(0,u.kq)("",!0):((0,u.wg)(),(0,u.iD)("iframe",{key:0,ref:"aepp",src:e.aeppUrl},null,8,N))],64)}r(8496);var S=r(9602);class w extends Error{constructor(e){super(e),this.name="BaseError"}}class z extends w{constructor(e){super(e),this.name="AccountError"}}class v extends w{constructor(e){super(e),this.name="AensError"}}class T extends w{constructor(e){super(e),this.name="AeppError"}}class b extends w{constructor(e){super(e),this.name="CompilerError"}}class x extends w{constructor(e){super(e),this.name="ContractError"}}class q extends w{constructor(e){super(e),this.name="CryptographyError"}}class P extends w{constructor(e){super(e),this.name="NodeError"}}class A extends w{constructor(e){super(e),this.name="TransactionError"}}class _ extends w{constructor(e){super(e),this.name="WalletError"}}class I extends w{constructor(e,t,r){super(`${e} should be ${t}, got ${r} instead`),this.name="ArgumentError"}}class k extends q{constructor(e){super(e),this.name="IllegalArgumentError"}}class O extends w{constructor(){super("Byte serialization not supported"),this.name="NoSerializerFoundError"}}class E extends w{constructor(e){super(`Giving up at height ${e}`),this.name="RequestTimedOutError"}}class M extends w{constructor(e,t){super([`Giving up after ${e} blocks mined`,`transaction hash: ${t}`].join(", ")),this.name="TxTimedOutError"}}class R extends w{constructor(e){super(e),this.name="TypeError"}}class B extends w{constructor(e){super(e),this.name="NotImplementedError"}}class $ extends w{constructor(e,t,r,n){super(`Unsupported ${e} version ${t}. Supported: >= ${r} < ${n}`),this.name="UnsupportedVersionError"}}class D extends w{constructor(e){super(e),this.name="InternalError"}}class V extends D{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Expected to not happen, required for TS";super(e),this.name="UnexpectedTsError"}}class F extends z{constructor(e){super(`Account for ${e} not available`),this.name="UnavailableAccountError"}}class H extends v{constructor(e,t){super(`Name ${e} don't have pointers for ${t}`),this.name="AensPointerContextError"}}class j extends v{constructor(e,t){super(`the provided fee ${e.toString()} is not enough to execute the claim, required: ${t.toString()}`),this.name="InsufficientNameFeeError"}}class G extends v{constructor(e){super(e),this.name="InvalidAensNameError"}}class U extends T{constructor(e){super(`Received invalid message: ${e}`),this.name="InvalidRpcMessageError"}}class Z extends T{constructor(e){super(`Can't find callback for this messageId ${e}`),this.name="MissingCallbackError"}}class W extends T{constructor(e){super(`RpcClient with id ${e} do not exist`),this.name="UnknownRpcClientError"}}class K extends x{constructor(e){super(`Contract ${e} do not correspond to the bytecode deployed on the chain`),this.name="BytecodeMismatchError"}}class Q extends x{constructor(){super("Contract already deployed"),this.name="DuplicateContractError"}}class L extends x{constructor(e){super(`Contract with address ${e} not active`),this.name="InactiveContractError"}}class J extends x{constructor(e){super(e),this.name="InvalidMethodInvocationError"}}class Y extends x{constructor(e){super(e),this.name="MissingContractAddressError"}}class X extends x{constructor(){super("Either ACI or sourceCode or sourceCodePath is required"),this.name="MissingContractDefError"}}class ee extends x{constructor(){super("Function name is required"),this.name="MissingFunctionNameError"}}class te extends x{constructor(e,t){super("Invocation failed"+(null==e?"":`: "${e}"`)),this.name="NodeInvocationError",this.transaction=t}}class re extends x{constructor(e){super(`Function ${e} doesn't exist in contract`),this.name="NoSuchContractFunctionError"}}class ne extends x{constructor(e,t){super(`You try to pay "${e}" to function "${t}" which is not payable. Only payable function can accept coins`),this.name="NotPayableFunctionError"}}class ae extends x{constructor(e,t){super(`Can't find definition of ${e} event emitted by ${t} (use omitUnknown option to ignore events like this)`),this.name="MissingEventDefinitionError"}}class ie extends x{constructor(e,t){super(`Found multiple definitions of "${t[0][1]}" event with different types emitted by ${e} in ${t.map((e=>{let[t]=e;return`"${t}"`})).join(", ")} contracts (use contractAddressToName option to specify contract name corresponding to address)`),this.name="AmbiguousEventDefinitionError"}}class se extends q{constructor(){super("Invalid checksum"),this.name="InvalidChecksumError"}}class oe extends q{constructor(){super("Node hash is not equal to provided one"),this.name="MerkleTreeHashMismatchError"}}class le extends q{constructor(e){super(e),this.name="MissingNodeInTreeError"}}class ce extends q{constructor(e){super(`Unknown node length: ${e}`),this.name="UnknownNodeLengthError"}}class de extends q{constructor(e){super(`Unknown path nibble: ${e}`),this.name="UnknownPathNibbleError"}}class ue extends P{constructor(e){super(`Node with name ${e} already exist`),this.name="DuplicateNodeError"}}class me extends P{constructor(e){super(e),this.name="NodeNotFoundError"}}class pe extends A{constructor(e){super(e),this.name="DecodeError"}}class he extends A{constructor(e){super(e),this.name="PayloadLengthError"}}class ye extends A{constructor(e){super(e),this.name="DryRunError"}}class ge extends A{constructor(e){super(`Prefix for id-tag ${e} not found.`),this.name="PrefixNotFoundError"}}class fe extends A{constructor(e,t){super(`Transaction schema not implemented for tag ${e} version ${t}`),this.name="SchemaNotFoundError"}}class Ne extends A{constructor(e){super(`Id tag for prefix ${e} not found.`),this.name="DecodeError"}}class Ce extends A{constructor(e){super(`Transaction ${e} is removed from chain`),this.name="TxNotInChainError"}}class Se extends _{constructor(e){super(e),this.name="AlreadyConnectedError"}}class we extends _{constructor(e){super(e),this.name="NoWalletConnectedError"}}class ze extends _{constructor(e){super(e),this.name="RpcConnectionError"}}let ve,Te,be,xe,qe;(function(e){e["to_waellet"]="to_waellet",e["to_aepp"]="to_aepp"})(ve||(ve={})),function(e){e["window"]="window",e["extension"]="extension"}(Te||(Te={})),function(e){e["subscribe"]="subscribe",e["unsubscribe"]="unsubscribe"}(be||(be={})),function(e){e["readyToConnect"]="connection.announcePresence",e["updateAddress"]="address.update",e["address"]="address.get",e["connect"]="connection.open",e["sign"]="transaction.sign",e["signMessage"]="message.sign",e["signTypedData"]="typedData.sign",e["subscribeAddress"]="address.subscribe",e["updateNetwork"]="networkId.update",e["closeConnection"]="connection.close"}(xe||(xe={})),function(e){e["CONNECTED"]="CONNECTED",e["DISCONNECTED"]="DISCONNECTED",e["WAITING_FOR_CONNECTION_REQUEST"]="WAITING_FOR_CONNECTION_REQUEST"}(qe||(qe={}));const Pe=[];class Ae extends w{toJSON(){return{code:this.code,message:this.message,data:this.data}}static deserialize(e){const t=Pe.find((t=>t.code===e.code));if(null==t)throw new D(`Can't find RpcError with code: ${e.code}`);return new t(e.data)}}class _e extends Ae{constructor(e){super("Invalid transaction"),(0,S.Z)(this,"code",2),this.data=e,this.name="RpcInvalidTransactionError"}}(0,S.Z)(_e,"code",2),Pe.push(_e);class Ie extends Ae{constructor(e){super("Operation rejected by user"),(0,S.Z)(this,"code",4),this.data=e,this.name="RpcRejectedByUserError"}}(0,S.Z)(Ie,"code",4),Pe.push(Ie);class ke extends Ae{constructor(){super("Unsupported Protocol Version"),(0,S.Z)(this,"code",5),this.name="RpcUnsupportedProtocolError"}}(0,S.Z)(ke,"code",5),Pe.push(ke);class Oe extends Ae{constructor(e){super("Wallet deny your connection request"),(0,S.Z)(this,"code",9),this.data=e,this.name="RpcConnectionDenyError"}}(0,S.Z)(Oe,"code",9),Pe.push(Oe);class Ee extends Ae{constructor(){super("You are not connected to the wallet"),(0,S.Z)(this,"code",10),this.name="RpcNotAuthorizeError"}}(0,S.Z)(Ee,"code",10),Pe.push(Ee);class Me extends Ae{constructor(e){super(`You are not subscribed for account ${e}`),(0,S.Z)(this,"code",11),this.data=e,this.name="RpcPermissionDenyError"}}(0,S.Z)(Me,"code",11),Pe.push(Me);class Re extends Ae{constructor(){super("The peer failed to execute your request due to unknown error"),(0,S.Z)(this,"code",12),this.name="RpcInternalError"}}(0,S.Z)(Re,"code",12),Pe.push(Re);class Be extends Ae{constructor(){super("Method not found"),(0,S.Z)(this,"code",-32601),this.name="RpcMethodNotFoundError"}}(0,S.Z)(Be,"code",-32601),Pe.push(Be);var $e=r(5291);class De{}var Ve=r(3261),Fe=r(811),He=r(7881),je=(r(5025),r(761),r(702),r(3101));const{Buffer:Ge}=$e,Ue=async e=>new Promise((t=>{setTimeout(t,e)})),Ze=(e,t)=>Object.fromEntries(Object.entries(e).map(t)),We=(()=>{try{return Ge.concat([Uint8Array.from([])]),!1}catch(e){return!0}})(),Ke=We?(e,t)=>Ge.concat(e.map((e=>Ge.from(e))),t):Ge.concat;function Qe(e,t){return e in t}function Le(e,t){return t.includes(e)}function Je(e){return e instanceof je.o&&404===e.statusCode&&e.message.includes("Account not found")}function Ye(e){if(!(e instanceof Error))throw e}var Xe=r(6301),et=r(7564);let tt;(function(e){e["KeyBlockHash"]="kh",e["MicroBlockHash"]="mh",e["BlockPofHash"]="bf",e["BlockTxHash"]="bx",e["BlockStateHash"]="bs",e["Channel"]="ch",e["ContractAddress"]="ct",e["ContractBytearray"]="cb",e["ContractStoreKey"]="ck",e["ContractStoreValue"]="cv",e["Transaction"]="tx",e["TxHash"]="th",e["OracleAddress"]="ok",e["OracleQuery"]="ov",e["OracleQueryId"]="oq",e["OracleResponse"]="or",e["AccountAddress"]="ak",e["Signature"]="sg",e["Commitment"]="cm",e["PeerPubkey"]="pp",e["Name"]="nm",e["State"]="st",e["Poi"]="pi",e["StateTrees"]="ss",e["CallStateTree"]="cs",e["Bytearray"]="ba"})(tt||(tt={}));const{Buffer:rt}=$e,{encode:nt,decode:at}=Xe;function it(e){return(new et).update(e).digest()}const st=[tt.ContractBytearray,tt.ContractStoreKey,tt.ContractStoreValue,tt.Transaction,tt.OracleQuery,tt.OracleResponse,tt.State,tt.Poi,tt.StateTrees,tt.CallStateTree,tt.Bytearray],ot=[tt.KeyBlockHash,tt.MicroBlockHash,tt.BlockPofHash,tt.BlockTxHash,tt.BlockStateHash,tt.Channel,tt.ContractAddress,tt.TxHash,tt.OracleAddress,tt.OracleQueryId,tt.AccountAddress,tt.Signature,tt.Commitment,tt.PeerPubkey,tt.Name],lt={[tt.KeyBlockHash]:32,[tt.MicroBlockHash]:32,[tt.BlockPofHash]:32,[tt.BlockTxHash]:32,[tt.BlockStateHash]:32,[tt.Channel]:32,[tt.ContractAddress]:32,[tt.TxHash]:32,[tt.OracleAddress]:32,[tt.OracleQueryId]:32,[tt.AccountAddress]:32,[tt.Signature]:64,[tt.Commitment]:32,[tt.PeerPubkey]:32,[tt.State]:32};function ct(e,t){if(!Qe(t,lt))return;const r=lt[t];if(null!=r&&e.length!==r)throw new he(`Payload should be ${r} bytes, got ${e.length} instead`)}const dt=e=>it(it(e)).slice(0,4),ut=e=>Ke([e,dt(e)]);function mt(e){const t=e.slice(0,-4);if(!dt(t).equals(e.slice(-4)))throw new se;return t}const pt={encode:e=>ut(e).toString("base64"),decode:e=>mt(rt.from(e,"base64"))},ht={encode:e=>nt(ut(e)),decode:e=>mt(rt.from(at(e)))},yt=e=>{const t=st.find((t=>t===e));if(null!=t)return[t,pt];const r=ot.find((t=>t===e));if(null!=r)return[r,ht];throw new I("prefix",`one of ${[...ot,...st].join(", ")}`,e)};function gt(e){const[t,r,n]=e.split("_");if(null==r)throw new pe(`Encoded string missing payload: ${e}`);if(null!=n)throw new pe(`Encoded string have extra parts: ${e}`);const[a,i]=yt(t),s=i.decode(r);return ct(s,a),s}function ft(e,t){const[,r]=yt(t);return ct(e,t),`${t}_${r.encode(e)}`}const{Buffer:Nt}=$e,{blake2b:Ct}=Fe,{encode:St}=He;function wt(){const[e]=new BigUint64Array(Ve.randomBytes(8).buffer);return Number(e%BigInt(Number.MAX_SAFE_INTEGER))}function zt(e){return Nt.from(Ct(e,void 0,32))}function vt(e){return Ve.sign.keyPair.fromSecretKey(e)}function Tt(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const t=Ve.sign.keyPair(),r=Nt.from(t.publicKey),n=Nt.from(t.secretKey);return e?{publicKey:r,secretKey:n}:{publicKey:ft(r,tt.AccountAddress),secretKey:n.toString("hex")}}function bt(e,t){return Ve.sign.detached(Nt.from(e),Nt.from(t))}function xt(e,t,r){return Ve.sign.detached.verify(e,t,gt(r))}const qt=Nt.from("aeternity Signed Message:\n","utf8"),Pt=St(qt.length);function At(e){const t=Nt.from(e,"utf8");return zt(Ke([Pt,qt,St(t.length),t]))}var _t=r(7701),It=r(8188),kt=r(4584);function Ot(e){var t;return zt(null!==(t=kt(e))&&void 0!==t?t:"")}function Et(e,t){const r=new _t,n=new It([]);return n.isCustomType=()=>!1,r.encode(n.resolveType(t),e)}function Mt(e,t){const r=new _t,n=new It([]);return n.isCustomType=()=>!1,r.decodeWithType(e,n.resolveType(t))}function Rt(e){const t={record:[{name:"name",type:{option:["string"]}},{name:"version",type:{option:["int"]}},{name:"networkId",type:{option:["string"]}},{name:"contractAddress",type:{option:["contract_pubkey"]}}]};return zt(gt(Et(e,t)))}function Bt(e,t,r){return zt(Ke([Pt,new Uint8Array([0]),Rt(r),Ot(t),zt(gt(e))]))}var $t=r(7519),Dt=r(971);const Vt=5e4,Ft=18e4,Ht=84600,jt=Ht,Gt=1e9,Ut=1e14,Zt=31,Wt=Ze({31:3,30:5,29:8,28:13,27:21,26:34,25:55,24:89,23:144,22:233,21:377,20:610,19:987,18:1597,17:2584,16:4181,15:6765,14:10946,13:17711,12:28657,11:46368,10:75025,9:121393,8:196418,7:317811,6:514229,5:832040,4:1346269,3:2178309,2:3524578,1:5702887},(e=>{let[t,r]=e;return[t,new Dt.Z(r).times(Ut)]}));let Kt,Qt,Lt,Jt;(function(e){e[e["Iris"]=5]="Iris",e[e["Ceres"]=6]="Ceres"})(Kt||(Kt={})),function(e){e[e["NoVm"]=0]="NoVm",e[e["Sophia"]=1]="Sophia",e[e["SophiaImprovementsMinerva"]=3]="SophiaImprovementsMinerva",e[e["SophiaImprovementsFortuna"]=4]="SophiaImprovementsFortuna",e[e["Fate"]=5]="Fate",e[e["SophiaImprovementsLima"]=6]="SophiaImprovementsLima",e[e["Fate2"]=7]="Fate2"}(Qt||(Qt={})),function(e){e[e["NoAbi"]=0]="NoAbi",e[e["Sophia"]=1]="Sophia",e[e["Fate"]=3]="Fate"}(Lt||(Lt={})),function(e){e[e["Account"]=10]="Account",e[e["SignedTx"]=11]="SignedTx",e[e["SpendTx"]=12]="SpendTx",e[e["Oracle"]=20]="Oracle",e[e["OracleRegisterTx"]=22]="OracleRegisterTx",e[e["OracleQueryTx"]=23]="OracleQueryTx",e[e["OracleResponseTx"]=24]="OracleResponseTx",e[e["OracleExtendTx"]=25]="OracleExtendTx",e[e["Name"]=30]="Name",e[e["NameClaimTx"]=32]="NameClaimTx",e[e["NamePreclaimTx"]=33]="NamePreclaimTx",e[e["NameUpdateTx"]=34]="NameUpdateTx",e[e["NameRevokeTx"]=35]="NameRevokeTx",e[e["NameTransferTx"]=36]="NameTransferTx",e[e["Contract"]=40]="Contract",e[e["ContractCall"]=41]="ContractCall",e[e["ContractCreateTx"]=42]="ContractCreateTx",e[e["ContractCallTx"]=43]="ContractCallTx",e[e["ChannelCreateTx"]=50]="ChannelCreateTx",e[e["ChannelDepositTx"]=51]="ChannelDepositTx",e[e["ChannelWithdrawTx"]=52]="ChannelWithdrawTx",e[e["ChannelForceProgressTx"]=521]="ChannelForceProgressTx",e[e["ChannelCloseMutualTx"]=53]="ChannelCloseMutualTx",e[e["ChannelCloseSoloTx"]=54]="ChannelCloseSoloTx",e[e["ChannelSlashTx"]=55]="ChannelSlashTx",e[e["ChannelSettleTx"]=56]="ChannelSettleTx",e[e["ChannelOffChainTx"]=57]="ChannelOffChainTx",e[e["ChannelOffChainUpdateTransfer"]=570]="ChannelOffChainUpdateTransfer",e[e["ChannelOffChainUpdateDeposit"]=571]="ChannelOffChainUpdateDeposit",e[e["ChannelOffChainUpdateWithdraw"]=572]="ChannelOffChainUpdateWithdraw",e[e["ChannelOffChainUpdateCreateContract"]=573]="ChannelOffChainUpdateCreateContract",e[e["ChannelOffChainUpdateCallContract"]=574]="ChannelOffChainUpdateCallContract",e[e["ChannelClientReconnectTx"]=575]="ChannelClientReconnectTx",e[e["Channel"]=58]="Channel",e[e["ChannelSnapshotSoloTx"]=59]="ChannelSnapshotSoloTx",e[e["TreesPoi"]=60]="TreesPoi",e[e["StateTrees"]=62]="StateTrees",e[e["Mtree"]=63]="Mtree",e[e["MtreeValue"]=64]="MtreeValue",e[e["ContractsMtree"]=621]="ContractsMtree",e[e["CallsMtree"]=622]="CallsMtree",e[e["ChannelsMtree"]=623]="ChannelsMtree",e[e["NameserviceMtree"]=624]="NameserviceMtree",e[e["OraclesMtree"]=625]="OraclesMtree",e[e["AccountsMtree"]=626]="AccountsMtree",e[e["GaAttachTx"]=80]="GaAttachTx",e[e["GaMetaTx"]=81]="GaMetaTx",e[e["PayingForTx"]=82]="PayingForTx",e[e["GaMetaTxAuthData"]=810]="GaMetaTxAuthData"}(Jt||(Jt={}));const{Buffer:Yt}=$e,Xt={[Kt.Iris]:{"contract-create":{vmVersion:[Qt.Fate2],abiVersion:[Lt.Fate]},"contract-call":{vmVersion:[],abiVersion:[Lt.Fate,Lt.Sophia]},"oracle-call":{vmVersion:[],abiVersion:[Lt.NoAbi,Lt.Fate]}},[Kt.Ceres]:{"contract-create":{vmVersion:[Qt.Fate2],abiVersion:[Lt.Fate]},"contract-call":{vmVersion:[],abiVersion:[Lt.Fate]},"oracle-call":{vmVersion:[],abiVersion:[Lt.NoAbi,Lt.Fate]}}};function er(e,t){var r;const n=Xt[e][t];return{vmVersion:null!==(r=n.vmVersion[0])&&void 0!==r?r:Qt.Fate2,abiVersion:n.abiVersion[0]}}var tr={serialize(e,t,r){var n;let{consensusProtocolVersion:a=Kt.Iris}=r;return null!==(n=e)&&void 0!==n||(e=er(a,"contract-create")),Yt.from([e.vmVersion,0,e.abiVersion])},async prepare(e,t,r){return null!=e?e:null==r.consensusProtocolVersion&&2!==Object.keys(Kt).length&&null!=r.onNode?er((await r.onNode.getNodeInfo()).consensusProtocolVersion,"contract-create"):void 0},deserialize(e){const[t,,r]=e;return{vmVersion:+t,abiVersion:+r}}};const{Buffer:rr}=$e;var nr={_getProtocolDetails(e,t){const r=Jt.ContractCallTx===t||Jt.GaMetaTx===t?"contract-call":"oracle-call";return er(e,r).abiVersion},serialize(e,t,r){let{tag:n}=t,{consensusProtocolVersion:a=Kt.Iris}=r;const i=null!==e&&void 0!==e?e:this._getProtocolDetails(a,n);return rr.from([i])},async prepare(e,t,r){let{tag:n}=t;return null!=e?e:null==r.consensusProtocolVersion&&2!==Object.keys(Kt).length&&null!=r.onNode?this._getProtocolDetails((await r.onNode.getNodeInfo()).consensusProtocolVersion,n):void 0},deserialize(e){return e[0]}};const{Buffer:ar}=$e;function ir(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(null==e)return ar.from([]);if(Number.isInteger(e)||Dt.Z.isBigNumber(e)||t){if(Dt.Z.isBigNumber(e)||(e=new Dt.Z(e)),!e.isInteger())throw new R(`Unexpected not integer value: ${e.toFixed()}`);let t=e.toString(16);return t.length%2===1&&(t=`0${t}`),ar.from(t,"hex")}if("string"===typeof e)return ar.from(e);throw new O}const{Buffer:sr}=$e,or=[tt.AccountAddress,tt.Name,tt.Commitment,tt.OracleAddress,tt.ContractAddress,tt.Channel];function lr(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return{serialize(e){const r=e.slice(0,2);if(!Le(r,or))throw new Ne(r);if(!Le(r,t))throw new I("Address encoding",t.join(", "),r);const n=or.indexOf(r)+1;return sr.from([...ir(n),...gt(e)])},deserialize(e){const r=sr.from(e).readUIntBE(0,1),n=or[r-1];if(null==n)throw new ge(r);if(!Le(n,t))throw new I("Address encoding",t.join(", "),n);return ft(e.subarray(1),n)}}}function cr(e){return{serialize(t,r){return t.map((t=>e.serialize(t,r)))},deserialize(t,r){return t.map((t=>e.deserialize(t,r)))}}}const{Buffer:dr}=$e;var ur={serialize(e){return dr.from([e?1:0])},deserialize(e){return 1===e[0]}};r(6229),r(7330),r(9882);const{Buffer:mr}=$e;function pr(e,t){const r=mr.from([...gt(e),...ir(t)]),n=zt(r);return ft(n,tt.ContractAddress)}function hr(e,t,r){function n(e){const t=ir(e,!0);return Ke([mr.alloc(32-t.length),t])}const a=zt(mr.from([...gt(e),...n(t),...gt(r)]));return ft(a,tt.OracleQueryId)}const yr=".chain";function gr(e){const[t,r,...n]=e.split(".");if(0!==n.length)throw new I("aens name","including only one dot",e);if(r!==yr.slice(1))throw new I("aens name",`suffixed with ${yr}`,e);if(/\p{Emoji_Presentation}/u.test(t))throw new I("aens name","not containing emoji",e);let a;try{const n=new URL(`http://${t}.${r}`);if(n.username+n.password+n.port+n.search+n.hash!==""||"/"!==n.pathname)throw new I("aens name","valid",e);a=n.host}catch(i){if(i instanceof TypeError&&i.message.includes("Invalid URL"))throw new I("aens name","valid",e);throw i}if(!/^[a-z0-9.-]+$/i.test(a))throw new I("aens name","without illegal chars",e);if(a.length>63+yr.length)throw new I("aens name","not too long",e);return a}function fr(e){return ft(zt(gr(e)),tt.Name)}function Nr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:wt();return ft(zt(Ke([mr.from(gr(e)),mr.from(t.toString(16).padStart(64,"0"),"hex")])),tt.Commitment)}function Cr(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:mr.from([]);return new Dt.Z(mr.from(e).toString("hex"),16).toString(10)}function Sr(e){gr(e)}function wr(e){try{return Sr(e),!0}catch(t){return!1}}tt.AccountAddress,tt.OracleAddress,tt.ContractAddress,tt.Channel;function zr(e){const t=gr(e).length-yr.length;return Wt[Math.min(t,Zt)]}function vr(e){return gr(e).length<13+yr.length}var Tr={serialize(e){if(e<0)throw new I("value","greater or equal to 0",e);return ir(e,!0)},deserialize(e){return Cr(e)}};const br=e=>"bigint"===typeof e||["number","object","string"].includes(typeof e)&&(!isNaN(e)||Number.isInteger(e)||Dt.Z.isBigNumber(e));let xr;(function(e){e["AE"]="ae",e["MILI_AE"]="miliAE",e["MICRO_AE"]="microAE",e["NANO_AE"]="nanoAE",e["PICO_AE"]="picoAE",e["FEMTO_AE"]="femtoAE",e["AETTOS"]="aettos"})(xr||(xr={}));const qr={[xr.AE]:0,[xr.MILI_AE]:-3,[xr.MICRO_AE]:-6,[xr.NANO_AE]:-9,[xr.PICO_AE]:-12,[xr.FEMTO_AE]:-15,[xr.AETTOS]:-18},Pr=(e,t)=>{let{denomination:r=xr.AETTOS,targetDenomination:n=xr.AETTOS}=t;if(!br(e))throw new I("value","a number",e);return new Dt.Z("bigint"===typeof e?e.toString():e).shiftedBy(qr[r]-qr[n]).toFixed()};var Ar={...Tr,serializeAettos(e,t){return null!==e&&void 0!==e?e:"0"},serialize(e,t,r){let{denomination:n=xr.AETTOS}=r;return Tr.serialize(this.serializeAettos(null!=e?Pr(e,{denomination:n}):e,t))}},_r={...Ar,serialize(e,t,r){var n;if(null!==(n=e)&&void 0!==n||(e=0),0!==+e)throw new k(`Contract deposit is not refundable, so it should be equal 0, got ${e.toString()} instead`);return Ar.serialize(e,t,r)}};const{Buffer:Ir}=$e;function kr(e,t){return{serialize(e){if(null==e){if(!0===t)return Ir.from([]);throw new I("Encoded data","provided",e)}return gt(e)},deserialize(t){return ft(t,e)}}}const{Buffer:Or}=$e;function Er(e){return{serialize(t,r){let{buildTx:n}=r;return ArrayBuffer.isView(t)?Or.from(t):"string"===typeof t&&t.startsWith("tx_")?gt(t):gt(n({...t,...null!=e&&{tag:e}}))},deserialize(t,r){let{unpackTx:n}=r;const a=n(ft(t,tt.Transaction));if(null!=e&&a.tag!==e)throw new I("Tag",Jt[e],Jt[a.tag]);return a}}}const{Buffer:Mr}=$e;function Rr(e){const t=Object.values(e).filter((e=>"number"===typeof e));return{serialize(e){if("number"!==typeof e)throw new I("value","to be a number",e);if(e>255)throw new I("value","to be less than 256",e);if(!Le(e,t))throw new I("value","to be a value of Enum",e);return Mr.from([e])},deserialize(e){if(1!==e.length)throw new I("buffer","to have single element",e.length);const r=e[0];if(!Le(r,t))throw new I("value","to be a value of Enum",r);return r}}}const Br=15e3,$r=20,Dr=3,Vr=e=>{var t;const r={[Jt.ChannelForceProgressTx]:30,[Jt.ChannelOffChainTx]:0,[Jt.ChannelOffChainUpdateCallContract]:0,[Jt.ChannelOffChainUpdateCreateContract]:0,[Jt.ChannelOffChainUpdateDeposit]:0,[Jt.ChannelOffChainUpdateWithdraw]:0,[Jt.ChannelOffChainUpdateTransfer]:0,[Jt.ContractCreateTx]:5,[Jt.ContractCallTx]:12,[Jt.GaAttachTx]:5,[Jt.GaMetaTx]:5,[Jt.PayingForTx]:.2},n=null!==(t=r[e])&&void 0!==t?t:1;return new Dt.Z(n*Br)},Fr=(e,t,r)=>{let{relativeTtl:n,innerTxSize:a}=r;switch(e){case Jt.OracleRegisterTx:case Jt.OracleExtendTx:case Jt.OracleQueryTx:case Jt.OracleResponseTx:return new Dt.Z(t).times($r).plus(Math.ceil(32e3*n/Math.floor(525600/Dr)));case Jt.GaMetaTx:case Jt.PayingForTx:return new Dt.Z(t).minus(a).times($r);default:return new Dt.Z(t).times($r)}};function Hr(e){const t={[Jt.OracleRegisterTx]:"oracleTtlValue",[Jt.OracleExtendTx]:"oracleTtlValue",[Jt.OracleQueryTx]:"queryTtlValue",[Jt.OracleResponseTx]:"responseTtlValue"},{tag:r}=e;return Qe(r,t)?e[t[r]]:1}function jr(e,t,r){const{length:n}=gt(e),a=t(e);let i=0;return a.tag!==Jt.GaMetaTx&&a.tag!==Jt.PayingForTx||(i=gt(r(a.tx.encodedTx)).length),Vr(a.tag).plus(Fr(a.tag,n,{relativeTtl:Hr(a),innerTxSize:i})).times(Gt)}function Gr(e,t,r){let n,a=new Dt.Z(0);do{n=a,a=jr(e(a),t,r)}while(!a.eq(n));return a}var Ur={...Ar,serializeAettos(e,t){let{rebuildTx:r,unpackTx:n,buildTx:a,_computingMinFee:i,_pickBiggerFee:s}=t;if(null!=i)return i.toFixed();const o=Gr((e=>r({_computingMinFee:e})),n,a),l=new Dt.Z(null!==e&&void 0!==e?e:o);if(o.gt(l)){if(!0===s)return o.toFixed();throw new k(`Fee ${l.toString()} must be bigger then ${o}`)}return l.toFixed()}},Zr={serialize(e){return Tr.serialize(e)},deserialize(e){return+Tr.deserialize(e)}};function Wr(e,t,r,n){return e-+jr(t(e),r,n).dividedBy(Gt)}var Kr={...Zr,serialize(e,t,r){let{tag:n,rebuildTx:a,unpackTx:i,buildTx:s,_computingGasLimit:o}=t,{gasMax:l=6e6}=r;if(null!=o)return Zr.serialize(o);const c=n===Jt.GaMetaTx?Vt:Wr(l,(e=>a({_computingGasLimit:e,_pickBiggerFee:!0})),i,s),d=null!==e&&void 0!==e?e:c;if(d>c)throw new k(`Gas limit ${d} must be less or equal to ${c}`);return Zr.serialize(d)}},Qr={...Ar,serializeAettos(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Gt.toString();if(+e<Gt)throw new k(`Gas price ${e.toString()} must be bigger then ${Gt}`);return e}};function Lr(e,t){return{serialize(e,r){let{buildTx:n}=r;return gt(n({tag:Jt.Mtree,values:Object.entries(e).map((e=>{let[r,a]=e;return{tag:Jt.MtreeValue,key:gt(r),value:gt(n({...a,tag:t}))}}))}))},deserialize(r,n){let{unpackTx:a}=n;const{values:i}=a(ft(r,tt.Transaction),Jt.Mtree);return Object.fromEntries(i.filter((t=>{let{key:r}=t;return e!==tt.ContractAddress||32===r.length})).map((r=>{let{key:n,value:i}=r;return[ft(n,e),a(ft(i,tt.Transaction),t)]})))},recursiveType:!0}}var Jr=r(5039),Yr=r(585);const{Buffer:Xr}=$e;function en(e,t){rn(e,t),t.add(e)}function tn(e,t,r){rn(e,t),t.set(e,r)}function rn(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function nn(e,t,r){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return r}function an(e,t,r){return sn(e,t),r}function sn(e,t){if(e!==t)throw new TypeError("Private static access of wrong provenance")}const{encode:on}=$t;var ln;(function(e){e[e["Branch"]=0]="Branch",e[e["Extension"]=1]="Extension",e[e["Leaf"]=2]="Leaf"})(ln||(ln={}));var cn=new WeakMap,dn=new WeakMap,un=new WeakMap,mn=new WeakMap,pn=new WeakMap,hn=new WeakMap,yn=new WeakSet,gn=new WeakSet;class fn{get isComplete(){return(0,Yr.Z)(this,dn)}constructor(e,t,r,n){if(en(this,gn),en(this,yn),tn(this,cn,{writable:!0,value:void 0}),tn(this,dn,{writable:!0,value:!0}),tn(this,un,{writable:!0,value:void 0}),tn(this,mn,{writable:!0,value:void 0}),tn(this,pn,{writable:!0,value:void 0}),tn(this,hn,{writable:!0,value:void 0}),(0,Jr.Z)(this,mn,t),(0,Jr.Z)(this,pn,r),(0,Jr.Z)(this,hn,n),(0,Jr.Z)(this,cn,e[0].toString("hex")),(0,Jr.Z)(this,un,Object.fromEntries(e[1].map((e=>[e[0].toString("hex"),e[1]])))),null!=(0,Yr.Z)(this,un)[(0,Yr.Z)(this,cn)])Object.entries((0,Yr.Z)(this,un)).forEach((e=>{let[t,r]=e;if(an(fn,fn,Nn).call(fn,r)!==t)throw new oe;const{type:n}=an(fn,fn,Cn).call(fn,r);switch(n){case ln.Branch:r.slice(0,16).filter((e=>e.length)).forEach((e=>{null==(0,Yr.Z)(this,un)[e.toString("hex")]&&(0,Jr.Z)(this,dn,!1)}));break;case ln.Extension:if(null==(0,Yr.Z)(this,un)[r[1].toString("hex")])throw new le("Can't find a node by hash in extension node");break;case ln.Leaf:break;default:throw new D(`Unknown MPTree node type: ${n}`)}}));else{if(0!==Object.keys((0,Yr.Z)(this,un)).length)throw new le("Can't find a node by root hash");(0,Jr.Z)(this,dn,!1)}}isEqual(e){return(0,Yr.Z)(this,cn)===(0,Yr.Z)(e,cn)}serialize(){return[Xr.from((0,Yr.Z)(this,cn),"hex"),Object.entries((0,Yr.Z)(this,un)).map((e=>{let[t,r]=e;return[Xr.from(t,"hex"),r]}))]}get(e){const t=nn(this,yn,Sn).call(this,gt(e).toString("hex"));return null==t?t:(0,Yr.Z)(this,hn).call(this,ft(t,tt.Transaction),(0,Yr.Z)(this,pn))}toObject(){return Object.fromEntries(nn(this,gn,wn).call(this).filter((e=>{let[t]=e;return(0,Yr.Z)(this,mn)!==tt.ContractAddress||66!==t.length})).map((e=>{let[t,r]=e;return[ft(Xr.from(t,"hex"),(0,Yr.Z)(this,mn)),(0,Yr.Z)(this,hn).call(this,ft(r,tt.Transaction),(0,Yr.Z)(this,pn))]})))}}function Nn(e){return Xr.from(zt(on(e))).toString("hex")}function Cn(e){switch(e.length){case 17:return{type:ln.Branch,...0!==e[16].length&&{value:e[16]}};case 2:{const t=e[0][0]>>4;if(t>3)throw new de(t);const r=t<=1?ln.Extension:ln.Leaf,n=[0,2].includes(t)?2:1;return{type:r,...r===ln.Leaf&&{value:e[1]},path:e[0].toString("hex").slice(n)}}default:throw new ce(e.length)}}function Sn(e){let t=(0,Yr.Z)(this,cn),r=e;while(1){const e=(0,Yr.Z)(this,un)[t];if(null==e){if(!this.isComplete)return;throw new D("Can't find node in complete tree")}const{type:n,value:a,path:i}=an(fn,fn,Cn).call(fn,e);switch(n){case ln.Branch:if(0===r.length)return a;t=e[+`0x${r[0]}`].toString("hex"),r=r.substring(1);break;case ln.Extension:if(r.substring(0,null===i||void 0===i?void 0:i.length)!==i)return;t=e[1].toString("hex"),r=r.substring(i.length);break;case ln.Leaf:if(i!==r)return;return a;default:throw new D(`Unknown MPTree node type: ${n}`)}}}function wn(){const e=[],t=(r,n)=>{const a=(0,Yr.Z)(this,un)[r];if(null==a){if(!this.isComplete)return;throw new D("Can't find node in complete tree")}const{type:i,value:s,path:o}=an(fn,fn,Cn).call(fn,a);switch(i){case ln.Branch:a.slice(0,16).map(((e,t)=>[e,t])).filter((e=>{let[t]=e;return t.length})).forEach((e=>{let[r,a]=e;return t(r.toString("hex"),n+a.toString(16))})),null!=s&&e.push([n,s]);break;case ln.Extension:t(a[1].toString("hex"),n+o);break;case ln.Leaf:if(null==s)throw new V;e.push([n+o,s]);break;default:throw new D(`Unknown MPTree node type: ${i}`)}};return t((0,Yr.Z)(this,cn),""),e}function zn(e,t){return{serialize(e){return e.serialize()},deserialize(r,n){let{unpackTx:a}=n;return new fn(r,e,t,a)}}}const{Buffer:vn}=$e;var Tn={serialize(e){return vn.from(e)},deserialize(e){return e.toString()}},bn={serialize(e){return Tn.serialize(e)},deserialize(e){return Tn.deserialize(e)}},xn={...Ar,serializeAettos(e,t){const r=zr(t.name),n=new Dt.Z(null!==e&&void 0!==e?e:r);if(r.gt(n))throw new j(n,r);return n.toFixed()},serialize(e,t,r){return Ar.serialize.call(this,e,t,r)}};const qn=lr(tt.Name);var Pn={...qn,serialize(e){return qn.serialize(wr(e)?fr(e):e)}};function An(e){return{...Zr,async prepare(t,r,n){if(null!=t)return t;const{onNode:a,strategy:i}=n,s=n[e],o="provided (or provide `nonce` instead)";if(null==a)throw new I("onNode",o,a);if(null==s)throw new I("senderId",o,s);return(await a.getAccountNextNonce(s.replace(/^ok_/,"ak_"),{strategy:i}).catch((e=>{if(!Je(e))throw e;return{nextNonce:1}}))).nextNonce},senderKey:e}}const _n=lr(...or);var In={serialize(e){if(e.length>32)throw new k(`Expected 32 pointers or less, got ${e.length} instead`);return e.map((e=>[ir(e.key),_n.serialize(e.id)]))},deserialize(e){return e.map((e=>{let[t,r]=e;return{key:t.toString(),id:_n.deserialize(r)}}))}};const{Buffer:kn}=$e;var On={serialize(e){return kn.from(e)},deserialize(e){return e}};function En(e,t){return{serialize(r){if((!0!==t||null!=r)&&r!==e)throw new I("ShortUIntConst",e,r);return Zr.serialize(e)},deserialize(t){const r=Zr.deserialize(t);if(r!==e)throw new I("ShortUIntConst",e,r);return e},constValue:e,constValueOptional:!0===t}}var Mn={serialize(e){return ir(e)},deserialize(e){return e.toString()}},Rn={...Zr,serialize(e){return Zr.serialize(null!==e&&void 0!==e?e:0)},async prepare(e,t,r){let{onNode:n,absoluteTtl:a}=r;if(!0!==a&&0!==e&&null!=e){if(null==n)throw new I("onNode","provided",n);e+=(await n.getCurrentKeyBlock()).height}return e}};function Bn(e){return{serialize(t,r){let{buildTx:n}=r;return gt(n({tag:e,payload:t}))},deserialize(t,r){let{unpackTx:n}=r;return n(ft(t,tt.Transaction),e).payload},recursiveType:!0}}const $n=nr,Dn=lr,Vn=cr,Fn=ur,Hn=Ar,jn=tr,Gn=_r,Un=kr,Zn=Er,Wn=Rr,Kn=Ur,Qn=Kr,Ln=Qr,Jn=Lr,Yn=zn,Xn=bn,ea=xn,ta=Pn,ra=An,na=In,aa=On,ia=Zr,sa=En,oa=Mn,la=Rn,ca=Tr,da=Bn;let ua;(function(e){e[e["delta"]=0]="delta",e[e["block"]=1]="block"})(ua||(ua={}));const ma={type:ua.delta,value:500},pa={type:ua.delta,value:10},ha={type:ua.delta,value:10},ya={pub:"ak_11111111111111111111111111111111273Yts",amount:100000000000000000000000000000000000n};let ga;(function(e){e[e["Ok"]=0]="Ok",e[e["Error"]=1]="Error",e[e["Revert"]=2]="Revert"})(ga||(ga={}));const fa=Zn(),Na=Zn(Jt.SignedTx),Ca=Vn(Zn(Jt.MtreeValue)),Sa=Zn(Jt.TreesPoi),wa=Jn(tt.ContractAddress,Jt.Contract),za=Jn(tt.AccountAddress,Jt.Account),va=Jn(tt.Bytearray,Jt.ContractCall),Ta=Jn(tt.Channel,Jt.Channel),ba=Jn(tt.Name,Jt.Name),xa=Jn(tt.OracleAddress,Jt.Oracle),qa=[{tag:sa(Jt.Account),version:sa(1),nonce:ia,balance:ca},{tag:sa(Jt.Account),version:sa(2,!0),flags:ca,nonce:ia,balance:ca,gaContract:Dn(tt.ContractAddress,tt.Name),gaAuthFun:Un(tt.ContractBytearray)},{tag:sa(Jt.SignedTx),version:sa(1,!0),signatures:Vn(aa),encodedTx:fa},{tag:sa(Jt.SpendTx),version:sa(1,!0),senderId:Dn(tt.AccountAddress),recipientId:Dn(tt.AccountAddress,tt.Name),amount:Hn,fee:Kn,ttl:la,nonce:ra("senderId"),payload:Un(tt.Bytearray,!0)},{tag:sa(Jt.Name),version:sa(1,!0),accountId:Dn(tt.AccountAddress),nameTtl:ia,status:aa,clientTtl:ia,pointers:na},{tag:sa(Jt.NamePreclaimTx),version:sa(1,!0),accountId:Dn(tt.AccountAddress),nonce:ra("accountId"),commitmentId:Dn(tt.Commitment),fee:Kn,ttl:la},{tag:sa(Jt.NameClaimTx),version:sa(2,!0),accountId:Dn(tt.AccountAddress),nonce:ra("accountId"),name:Xn,nameSalt:ca,nameFee:ea,fee:Kn,ttl:la},{tag:sa(Jt.NameUpdateTx),version:sa(1,!0),accountId:Dn(tt.AccountAddress),nonce:ra("accountId"),nameId:ta,nameTtl:ia,pointers:na,clientTtl:ia,fee:Kn,ttl:la},{tag:sa(Jt.NameTransferTx),version:sa(1,!0),accountId:Dn(tt.AccountAddress),nonce:ra("accountId"),nameId:ta,recipientId:Dn(tt.AccountAddress,tt.Name),fee:Kn,ttl:la},{tag:sa(Jt.NameRevokeTx),version:sa(1,!0),accountId:Dn(tt.AccountAddress),nonce:ra("accountId"),nameId:ta,fee:Kn,ttl:la},{tag:sa(Jt.Contract),version:sa(1,!0),owner:Dn(tt.AccountAddress),ctVersion:jn,code:Un(tt.ContractBytearray),log:Un(tt.ContractBytearray),active:Fn,referers:Vn(Dn(tt.AccountAddress)),deposit:Gn},{tag:sa(Jt.ContractCreateTx),version:sa(1,!0),ownerId:Dn(tt.AccountAddress),nonce:ra("ownerId"),code:Un(tt.ContractBytearray),ctVersion:jn,fee:Kn,ttl:la,deposit:Gn,amount:Hn,gasLimit:Qn,gasPrice:Ln,callData:Un(tt.ContractBytearray)},{tag:sa(Jt.ContractCallTx),version:sa(1,!0),callerId:Dn(tt.AccountAddress),nonce:ra("callerId"),contractId:Dn(tt.ContractAddress,tt.Name),abiVersion:$n,fee:Kn,ttl:la,amount:Hn,gasLimit:Qn,gasPrice:Ln,callData:Un(tt.ContractBytearray)},{tag:sa(Jt.ContractCall),version:sa(2,!0),callerId:Dn(tt.AccountAddress),callerNonce:ia,height:ia,contractId:Dn(tt.ContractAddress),gasPrice:ca,gasUsed:ia,returnValue:Un(tt.ContractBytearray),returnType:Wn(ga),log:Vn(aa)},{tag:sa(Jt.Oracle),version:sa(1,!0),accountId:Dn(tt.AccountAddress),queryFormat:oa,responseFormat:oa,queryFee:Hn,oracleTtlValue:ia,abiVersion:$n},{tag:sa(Jt.OracleRegisterTx),version:sa(1,!0),accountId:Dn(tt.AccountAddress),nonce:ra("accountId"),queryFormat:oa,responseFormat:oa,queryFee:Hn,oracleTtlType:Wn(ua),oracleTtlValue:ia,fee:Kn,ttl:la,abiVersion:$n},{tag:sa(Jt.OracleExtendTx),version:sa(1,!0),oracleId:Dn(tt.OracleAddress,tt.Name),nonce:ra("oracleId"),oracleTtlType:Wn(ua),oracleTtlValue:ia,fee:Kn,ttl:la},{tag:sa(Jt.OracleQueryTx),version:sa(1,!0),senderId:Dn(tt.AccountAddress),nonce:ra("senderId"),oracleId:Dn(tt.OracleAddress,tt.Name),query:oa,queryFee:Hn,queryTtlType:Wn(ua),queryTtlValue:ia,responseTtlType:Wn(ua),responseTtlValue:ia,fee:Kn,ttl:la},{tag:sa(Jt.OracleResponseTx),version:sa(1,!0),oracleId:Dn(tt.OracleAddress),nonce:ra("oracleId"),queryId:Un(tt.OracleQueryId),response:oa,responseTtlType:Wn(ua),responseTtlValue:ia,fee:Kn,ttl:la},{tag:sa(Jt.ChannelCreateTx),version:sa(2,!0),initiator:Dn(tt.AccountAddress),initiatorAmount:ca,responder:Dn(tt.AccountAddress),responderAmount:ca,channelReserve:ca,lockPeriod:ca,ttl:la,fee:Kn,initiatorDelegateIds:Vn(Dn(...or)),responderDelegateIds:Vn(Dn(...or)),stateHash:Un(tt.State),nonce:ra("initiator")},{tag:sa(Jt.ChannelCloseMutualTx),version:sa(1,!0),channelId:Dn(tt.Channel),fromId:Dn(tt.AccountAddress),initiatorAmountFinal:ca,responderAmountFinal:ca,ttl:la,fee:Kn,nonce:ra("fromId")},{tag:sa(Jt.ChannelCloseSoloTx),version:sa(1,!0),channelId:Dn(tt.Channel),fromId:Dn(tt.AccountAddress),payload:Un(tt.Transaction),poi:Sa,ttl:la,fee:Kn,nonce:ra("fromId")},{tag:sa(Jt.ChannelSlashTx),version:sa(1,!0),channelId:Dn(tt.Channel),fromId:Dn(tt.AccountAddress),payload:Un(tt.Transaction),poi:Sa,ttl:la,fee:Kn,nonce:ra("fromId")},{tag:sa(Jt.ChannelDepositTx),version:sa(1,!0),channelId:Dn(tt.Channel),fromId:Dn(tt.AccountAddress),amount:ca,ttl:la,fee:Kn,stateHash:Un(tt.State),round:ia,nonce:ra("fromId")},{tag:sa(Jt.ChannelWithdrawTx),version:sa(1,!0),channelId:Dn(tt.Channel),toId:Dn(tt.AccountAddress),amount:ca,ttl:la,fee:Kn,stateHash:Un(tt.State),round:ia,nonce:ra("fromId")},{tag:sa(Jt.ChannelSettleTx),version:sa(1,!0),channelId:Dn(tt.Channel),fromId:Dn(tt.AccountAddress),initiatorAmountFinal:ca,responderAmountFinal:ca,ttl:la,fee:Kn,nonce:ra("fromId")},{tag:sa(Jt.ChannelForceProgressTx),version:sa(1,!0),channelId:Dn(tt.Channel),fromId:Dn(tt.AccountAddress),payload:Un(tt.Transaction),round:ia,update:Un(tt.ContractBytearray),stateHash:Un(tt.State),offChainTrees:Un(tt.StateTrees),ttl:la,fee:Kn,nonce:ra("fromId")},{tag:sa(Jt.ChannelOffChainTx),version:sa(2,!0),channelId:Dn(tt.Channel),round:ia,stateHash:Un(tt.State)},{tag:sa(Jt.Channel),version:sa(3,!0),initiator:Dn(tt.AccountAddress),responder:Dn(tt.AccountAddress),channelAmount:ca,initiatorAmount:ca,responderAmount:ca,channelReserve:ca,initiatorDelegateIds:Vn(Dn(...or)),responderDelegateIds:Vn(Dn(...or)),stateHash:Un(tt.State),round:ia,soloRound:ca,lockPeriod:ca,lockedUntil:ca,initiatorAuth:Un(tt.ContractBytearray),responderAuth:Un(tt.ContractBytearray)},{tag:sa(Jt.ChannelSnapshotSoloTx),version:sa(1,!0),channelId:Dn(tt.Channel),fromId:Dn(tt.AccountAddress),payload:Un(tt.Transaction),ttl:la,fee:Kn,nonce:ra("fromId")},{tag:sa(Jt.ChannelOffChainUpdateTransfer),version:sa(1,!0),from:Dn(tt.AccountAddress),to:Dn(tt.AccountAddress),amount:ca},{tag:sa(Jt.ChannelOffChainUpdateDeposit),version:sa(1,!0),from:Dn(tt.AccountAddress),amount:ca},{tag:sa(Jt.ChannelOffChainUpdateWithdraw),version:sa(1,!0),from:Dn(tt.AccountAddress),amount:ca},{tag:sa(Jt.ChannelOffChainUpdateCreateContract),version:sa(1,!0),owner:Dn(tt.AccountAddress),ctVersion:jn,code:Un(tt.ContractBytearray),deposit:ca,callData:Un(tt.ContractBytearray)},{tag:sa(Jt.ChannelOffChainUpdateCallContract),version:sa(1,!0),caller:Dn(tt.AccountAddress),contract:Dn(tt.ContractAddress),abiVersion:$n,amount:ca,callData:Un(tt.ContractBytearray),callStack:aa,gasPrice:Ln,gasLimit:Qn},{tag:sa(Jt.ChannelClientReconnectTx),version:sa(1,!0),channelId:Dn(tt.Channel),round:ia,role:oa,pubkey:Dn(tt.AccountAddress)},{tag:sa(Jt.TreesPoi),version:sa(1,!0),accounts:Vn(Yn(tt.AccountAddress,Jt.Account)),calls:Vn(Yn(tt.Bytearray,Jt.ContractCall)),channels:Vn(Yn(tt.Channel,Jt.Channel)),contracts:Vn(Yn(tt.ContractAddress,Jt.Contract)),ns:Vn(Yn(tt.Name,Jt.Name)),oracles:Vn(Yn(tt.OracleAddress,Jt.Oracle))},{tag:sa(Jt.StateTrees),version:sa(0,!0),contracts:da(Jt.ContractsMtree),calls:da(Jt.CallsMtree),channels:da(Jt.ChannelsMtree),ns:da(Jt.NameserviceMtree),oracles:da(Jt.OraclesMtree),accounts:da(Jt.AccountsMtree)},{tag:sa(Jt.Mtree),version:sa(1,!0),values:Ca},{tag:sa(Jt.MtreeValue),version:sa(1,!0),key:aa,value:aa},{tag:sa(Jt.ContractsMtree),version:sa(1,!0),payload:wa},{tag:sa(Jt.CallsMtree),version:sa(1,!0),payload:va},{tag:sa(Jt.ChannelsMtree),version:sa(1,!0),payload:Ta},{tag:sa(Jt.NameserviceMtree),version:sa(1,!0),payload:ba},{tag:sa(Jt.OraclesMtree),version:sa(1,!0),payload:xa},{tag:sa(Jt.AccountsMtree),version:sa(1,!0),payload:za},{tag:sa(Jt.GaAttachTx),version:sa(1,!0),ownerId:Dn(tt.AccountAddress),nonce:ra("ownerId"),code:Un(tt.ContractBytearray),authFun:aa,ctVersion:jn,fee:Kn,ttl:la,gasLimit:Qn,gasPrice:Ln,callData:Un(tt.ContractBytearray)},{tag:sa(Jt.GaMetaTx),version:sa(2,!0),gaId:Dn(tt.AccountAddress),authData:Un(tt.ContractBytearray),abiVersion:$n,fee:Kn,gasLimit:Qn,gasPrice:Ln,tx:Na},{tag:sa(Jt.PayingForTx),version:sa(1,!0),payerId:Dn(tt.AccountAddress),nonce:ra("payerId"),fee:Kn,tx:Na},{tag:sa(Jt.GaMetaTxAuthData),version:sa(1,!0),fee:Hn,gasPrice:Ln,txHash:Un(tt.TxHash)}],{decode:Pa,encode:Aa}=$t;function _a(e,t){var r;const n=qa.filter((t=>t.tag.constValue===e));if(0===n.length)throw new fe(`${Jt[e]} (${e})`,0);null!==(r=t)&&void 0!==r||(t=Math.max(...n.map((e=>e.version.constValue))));const a=n.find((e=>e.version.constValue===t));if(null==a)throw new fe(`${Jt[e]} (${e})`,t);return Object.entries(a)}function Ia(e){let{prefix:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=_a(e.tag,e.version),n=r.map((t=>{let[r,n]=t;return n.serialize(e[r],{...e,unpackTx:Oa,buildTx:Ia,rebuildTx:t=>Ia({...e,...t})},e)}));return ft(Aa(n),null!==t&&void 0!==t?t:tt.Transaction)}async function ka(e){return await Promise.all(_a(e.tag,e.version).map((async t=>{let[r,n]=t;null!=n.prepare&&(e[r]=await n.prepare(e[r],e,e))}))),Ia(e)}function Oa(e,t){const r=Pa(gt(e)),n=+Cr(r[0]),a=+Cr(r[1]),i=_a(n,a);if(null!=t&&t!==n)throw new pe(`Expected transaction to have ${Jt[t]} tag, got ${Jt[n]} instead`);if(r.length!==i.length)throw new I("Transaction RLP length",i.length,r.length);return i.reduce(((e,t,n)=>{let[a,i]=t;const s=i.deserialize(r[n],{unpackTx:Oa});return{...e,[a]:s}}),{})}function Ea(e){const t="string"===typeof e&&e.startsWith("tx_")?gt(e):e;return ft(zt(t),tt.TxHash)}function Ma(e){const t=Oa(e);if(Jt.ContractCreateTx!==t.tag&&Jt.GaAttachTx!==t.tag)throw new I("contractTx","a contractCreateTx or gaAttach",t.tag);return pr(t.ownerId,t.nonce)}const{Buffer:Ra}=$e,Ba=new WeakMap;function $a(e,t,r){const n=[t];r&&n.push("inner_tx");const a=gt(e);return Ke([Ra.from(n.join("-")),zt(a)])}class Da extends De{constructor(e){if(super(),e="string"===typeof e?Ra.from(e,"hex"):e,64!==e.length)throw new I("secretKey","64 bytes",e.length);Ba.set(this,e),this.address=ft(vt(Ba.get(this)).publicKey,tt.AccountAddress)}static generate(){return new Da(Tt().secretKey)}async sign(e,t){return bt(e,Ba.get(this))}async signTransaction(e){let{innerTx:t,networkId:r,...n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==r)throw new I("networkId","provided",r);const a=gt(e),i=$a(e,r,!0===t),s=[await this.sign(i,n)];return Ia({tag:Jt.SignedTx,encodedTx:a,signatures:s})}async signMessage(e,t){return this.sign(At(e),t)}async signTypedData(e,t){let{name:r,version:n,networkId:a,contractAddress:i,...s}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const o=Bt(e,t,{name:r,version:n,networkId:a,contractAddress:i}),l=await this.sign(o,s);return ft(l,tt.Signature)}}var Va=r(2188);function Fa(e,t,r){const n=e=>e.split(/[-+]/)[0].split(".").map((e=>+e)),a=n(e),i=n(t),s=n(r),o=Math.max(...a,...i,...s)+1,l=e=>e.reverse().reduce(((e,t,r)=>e+t*o**r),0),c=l(a),d=l(i),u=l(s);return c>=d&&c<u}const Ha=()=>{const e=new Map;return{policy:{name:"request-queues",async sendRequest(t,r){var n;const a=t.headers.get("__queue");t.headers.delete("__queue");const i=async()=>r(t);if(null==a)return i();const s=(null!==(n=e.get(a))&&void 0!==n?n:Promise.resolve()).then(i,i);return e.set(a,s.then((async()=>Ue(750)))),s}},position:"perCall"}},ja=()=>{const e=new Map;return{policy:{name:"combine-get-requests",async sendRequest(t,r){var n;if("GET"!==t.method)return r(t);const a=JSON.stringify([t.url,t.body]),i=null!==(n=e.get(a))&&void 0!==n?n:r(t);e.set(a,i);try{return await i}finally{e.delete(a)}}},position:"perCall"}},Ga=()=>{const e=new Map;return{policy:{name:"aggressive-cache-get-responses",async sendRequest(t,r){var n;if("GET"!==t.method)return r(t);const a=JSON.stringify([t.url,t.body]),i=null!==(n=e.get(a))&&void 0!==n?n:r(t);return e.set(a,i),i}},position:"perCall"}},Ua=e=>({policy:{name:"error-formatter",async sendRequest(t,r){try{return await r(t)}catch(a){var n;if(!(a instanceof je.o)||null==a.request)throw a;if(null==(null===(n=a.response)||void 0===n?void 0:n.bodyAsText))throw a;let t;try{t=JSON.parse(a.response.bodyAsText)}catch(i){throw a}a.message=`${new URL(a.request.url).pathname.slice(1)} error`;const r=e(t);throw""!==r&&(a.message+=`:${r}`),a}}},position:"perCall"}),Za=(e,t,r,n,a)=>({name:"version-check",async sendRequest(i,s){if(new URL(i.url).pathname===t)return s(i);const o=await r;if(o instanceof Error)throw o;const l=[o,n,a];if(!Fa(...l))throw new $(e,...l);return s(i)}}),Wa=(e,t)=>({policy:{name:"retry-on-failure",async sendRequest(r,n){const a=[200,400,403],i=new Array(e).fill(0).map(((t,r)=>((r+1)/e)**2)),s=i.reduce(((e,t)=>e+t)),o=i.map((e=>e/s*t));let l=new je.o("Not expected to be thrown");for(let t=0;t<=e;t+=1){0!==t&&await Ue(o[t-1]);try{return await n(r)}catch(u){var c,d;if(!(u instanceof je.o))throw u;if(a.includes(null!==(c=null===(d=u.response)||void 0===d?void 0:d.status)&&void 0!==c?c:0))throw u;l=u}}throw l}},position:"perCall"});var Ka=r(2893),Qa=r(8491);const La={type:{name:"Composite",className:"Header",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",type:{name:"String"}},beneficiary:{serializedName:"beneficiary",type:{name:"String"}},target:{serializedName:"target",type:{name:"String"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{type:{name:"String"}}}},nonce:{serializedName:"nonce",type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},info:{serializedName:"info",type:{name:"String"}},pofHash:{serializedName:"pof_hash",type:{name:"String"}},txsHash:{serializedName:"txs_hash",type:{name:"String"}},signature:{serializedName:"signature",type:{name:"String"}}}}},Ja={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}}}}},Ya={type:{name:"Composite",className:"KeyBlock",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",required:!0,type:{name:"String"}},beneficiary:{serializedName:"beneficiary",required:!0,type:{name:"String"}},target:{serializedName:"target",required:!0,type:{name:"String"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{type:{name:"String"}}}},nonce:{serializedName:"nonce",type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},info:{serializedName:"info",required:!0,type:{name:"String"}}}}},Xa={type:{name:"Composite",className:"HashResponse",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}}}}},ei={type:{name:"Composite",className:"HeightResponse",modelProperties:{height:{serializedName:"height",required:!0,type:{name:"String"}}}}},ti={type:{name:"Composite",className:"MicroBlockHeader",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},pofHash:{serializedName:"pof_hash",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},txsHash:{serializedName:"txs_hash",required:!0,type:{name:"String"}},signature:{serializedName:"signature",required:!0,type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}}}}},ri={type:{name:"Composite",className:"SignedTxs",modelProperties:{transactions:{serializedName:"transactions",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedTx"}}}}}}},ni={type:{name:"Composite",className:"SignedTx",modelProperties:{tx:{serializedName:"tx",type:{name:"Composite",className:"Tx"}},blockHeight:{serializedName:"block_height",required:!0,type:{name:"String"}},blockHash:{serializedName:"block_hash",required:!0,type:{name:"String"}},hash:{serializedName:"hash",required:!0,type:{name:"String"}},signatures:{serializedName:"signatures",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},ai={serializedName:"Tx",type:{name:"Composite",className:"Tx",uberParent:"Tx",polymorphicDiscriminator:{serializedName:"type",clientName:"type"},modelProperties:{recipientId:{serializedName:"recipient_id",type:{name:"String"}},amount:{serializedName:"amount",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},payload:{serializedName:"payload",type:{name:"String"}},initiatorId:{serializedName:"initiator_id",type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",type:{name:"String"}},responderId:{serializedName:"responder_id",type:{name:"String"}},responderAmount:{serializedName:"responder_amount",type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",type:{name:"String"}},lockPeriod:{serializedName:"lock_period",type:{name:"String"}},stateHash:{serializedName:"state_hash",type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},channelId:{serializedName:"channel_id",type:{name:"String"}},fromId:{serializedName:"from_id",type:{name:"String"}},round:{serializedName:"round",type:{name:"String"}},toId:{serializedName:"to_id",type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",type:{name:"String"}},poi:{serializedName:"poi",type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},queryFormat:{serializedName:"query_format",type:{name:"String"}},responseFormat:{serializedName:"response_format",type:{name:"String"}},queryFee:{serializedName:"query_fee",type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},accountId:{serializedName:"account_id",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}},oracleId:{serializedName:"oracle_id",type:{name:"String"}},query:{serializedName:"query",type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},queryId:{serializedName:"query_id",type:{name:"String"}},response:{serializedName:"response",type:{name:"String"}},commitmentId:{serializedName:"commitment_id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},nameSalt:{serializedName:"name_salt",type:{name:"String"}},nameFee:{serializedName:"name_fee",type:{name:"String"}},nameId:{serializedName:"name_id",type:{name:"String"}},nameTtl:{serializedName:"name_ttl",type:{name:"String"}},pointers:{serializedName:"pointers",type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{serializedName:"client_ttl",type:{name:"String"}},ownerId:{serializedName:"owner_id",type:{name:"String"}},code:{serializedName:"code",type:{name:"String"}},vmVersion:{serializedName:"vm_version",type:{name:"String"}},deposit:{serializedName:"deposit",type:{name:"String"}},gas:{serializedName:"gas",type:{name:"String"}},gasPrice:{serializedName:"gas_price",type:{name:"String"}},callData:{serializedName:"call_data",type:{name:"String"}},callerId:{serializedName:"caller_id",type:{name:"String"}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",type:{name:"String"}},gaId:{serializedName:"ga_id",type:{name:"String"}},authData:{serializedName:"auth_data",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}},payerId:{serializedName:"payer_id",type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["SpendTx","ChannelCreateTx","ChannelDepositTx","ChannelWithdrawTx","ChannelForceProgressTx","ChannelCloseMutualTx","ChannelCloseSoloTx","ChannelSlashTx","ChannelSettleTx","ChannelSnapshotSoloTx","ChannelSetDelegatesTx","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleRespondTx","NamePreclaimTx","NameClaimTx","NameUpdateTx","NameTransferTx","NameRevokeTx","ContractCreateTx","ContractCallTx","GAAttachTx","GAMetaTx","PayingForTx"]}}}}},ii={type:{name:"Composite",className:"Delegates",modelProperties:{initiator:{serializedName:"initiator",type:{name:"Sequence",element:{type:{name:"String"}}}},responder:{serializedName:"responder",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},si={type:{name:"Composite",className:"OffChainUpdate",uberParent:"OffChainUpdate",polymorphicDiscriminator:{serializedName:"op",clientName:"op"},modelProperties:{op:{serializedName:"op",required:!0,type:{name:"String"}}}}},oi={type:{name:"Composite",className:"RelativeTTL",modelProperties:{type:{defaultValue:"delta",isConstant:!0,serializedName:"type",type:{name:"String"}},value:{serializedName:"value",required:!0,type:{name:"String"}}}}},li={type:{name:"Composite",className:"Ttl",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["delta","block"]}},value:{serializedName:"value",required:!0,type:{name:"String"}}}}},ci={type:{name:"Composite",className:"NamePointer",modelProperties:{key:{serializedName:"key",required:!0,type:{name:"String"}},id:{serializedName:"id",required:!0,type:{name:"String"}}}}},di={type:{name:"Composite",className:"CountResponse",modelProperties:{count:{serializedName:"count",required:!0,type:{name:"String"}}}}},ui={type:{name:"Composite",className:"Generation",modelProperties:{keyBlock:{serializedName:"key_block",type:{name:"Composite",className:"KeyBlock"}},microBlocks:{serializedName:"micro_blocks",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},mi={type:{name:"Composite",className:"Account",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},balance:{serializedName:"balance",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},payable:{serializedName:"payable",type:{name:"Boolean"}},kind:{serializedName:"kind",type:{name:"Enum",allowedValues:["basic","generalized"]}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{serializedName:"auth_fun",type:{name:"String"}}}}},pi={type:{name:"Composite",className:"NextNonceResponse",modelProperties:{nextNonce:{serializedName:"next_nonce",required:!0,type:{name:"String"}}}}},hi={type:{name:"Composite",className:"DryRunInput",modelProperties:{top:{serializedName:"top",type:{name:"String"}},accounts:{serializedName:"accounts",type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunAccount"}}}},txs:{serializedName:"txs",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunInputItem"}}}},txEvents:{defaultValue:!1,serializedName:"tx_events",type:{name:"Boolean"}}}}},yi={type:{name:"Composite",className:"DryRunAccount",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},gi={type:{name:"Composite",className:"DryRunInputItem",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},callReq:{serializedName:"call_req",type:{name:"Composite",className:"DryRunCallReq"}}}}},fi={type:{name:"Composite",className:"DryRunCallReq",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},amount:{serializedName:"amount",type:{name:"String"}},gas:{serializedName:"gas",type:{name:"String"}},caller:{serializedName:"caller",type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}},context:{serializedName:"context",type:{name:"Composite",className:"DryRunCallContext"}}}}},Ni={type:{name:"Composite",className:"DryRunCallContext",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},stateful:{serializedName:"stateful",type:{name:"Boolean"}}}}},Ci={type:{name:"Composite",className:"DryRunResults",modelProperties:{results:{serializedName:"results",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunResult"}}}},txEvents:{serializedName:"tx_events",type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},Si={type:{name:"Composite",className:"DryRunResult",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"String"}},reason:{serializedName:"reason",type:{name:"String"}},callObj:{serializedName:"call_obj",type:{name:"Composite",className:"ContractCallObject"}}}}},wi={type:{name:"Composite",className:"ContractCallObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},callerNonce:{serializedName:"caller_nonce",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},gasUsed:{serializedName:"gas_used",required:!0,type:{name:"String"}},log:{serializedName:"log",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Event"}}}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error","revert"]}}}}},zi={type:{name:"Composite",className:"Event",modelProperties:{address:{serializedName:"address",required:!0,type:{name:"String"}},topics:{serializedName:"topics",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},vi={type:{name:"Composite",className:"TxInfoObject",modelProperties:{callInfo:{serializedName:"call_info",type:{name:"Composite",className:"ContractCallObject"}},gaInfo:{serializedName:"ga_info",type:{name:"Composite",className:"GAObject"}},txInfo:{serializedName:"tx_info",type:{name:"String"}}}}},Ti={type:{name:"Composite",className:"GAObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},gasUsed:{serializedName:"gas_used",required:!0,type:{name:"String"}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error"]}},innerObject:{serializedName:"inner_object",type:{name:"Composite",className:"TxInfoObject"}}}}},bi={type:{name:"Composite",className:"EncodedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},xi={type:{name:"Composite",className:"PostTxResponse",modelProperties:{txHash:{serializedName:"tx_hash",required:!0,type:{name:"String"}}}}},qi={type:{name:"Composite",className:"ContractObject",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},active:{serializedName:"active",required:!0,type:{name:"Boolean"}},referrerIds:{serializedName:"referrer_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}}}}},Pi={type:{name:"Composite",className:"ByteCode",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Ai={type:{name:"Composite",className:"PoI",modelProperties:{poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},_i={type:{name:"Composite",className:"RegisteredOracle",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}}}}},Ii={type:{name:"Composite",className:"OracleQueries",modelProperties:{oracleQueries:{serializedName:"oracle_queries",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"OracleQuery"}}}}}}},ki={type:{name:"Composite",className:"OracleQuery",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},senderNonce:{serializedName:"sender_nonce",required:!0,type:{name:"String"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"Ttl"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}}}}},Oi={type:{name:"Composite",className:"NameEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},owner:{serializedName:"owner",type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}}}}},Ei={type:{name:"Composite",className:"Channel",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},channelAmount:{serializedName:"channel_amount",required:!0,type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",required:!0,type:{name:"String"}},responderAmount:{serializedName:"responder_amount",required:!0,type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},soloRound:{serializedName:"solo_round",required:!0,type:{name:"String"}},lockPeriod:{serializedName:"lock_period",required:!0,type:{name:"String"}},lockedUntil:{serializedName:"locked_until",required:!0,type:{name:"String"}}}}},Mi={type:{name:"Composite",className:"PeerPubKey",modelProperties:{pubkey:{serializedName:"pubkey",required:!0,type:{name:"String"}}}}},Ri={type:{name:"Composite",className:"Status",modelProperties:{genesisKeyBlockHash:{serializedName:"genesis_key_block_hash",required:!0,type:{name:"String"}},solutions:{serializedName:"solutions",required:!0,type:{name:"String"}},difficulty:{serializedName:"difficulty",required:!0,type:{name:"String"}},syncing:{serializedName:"syncing",required:!0,type:{name:"Boolean"}},syncProgress:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"sync_progress",type:{name:"Number"}},listening:{serializedName:"listening",required:!0,type:{name:"Boolean"}},protocols:{serializedName:"protocols",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Protocol"}}}},nodeVersion:{serializedName:"node_version",required:!0,type:{name:"String"}},nodeRevision:{serializedName:"node_revision",required:!0,type:{name:"String"}},peerCount:{serializedName:"peer_count",required:!0,type:{name:"String"}},peerConnections:{serializedName:"peer_connections",type:{name:"Composite",className:"PeerConnections"}},pendingTransactionsCount:{serializedName:"pending_transactions_count",required:!0,type:{name:"String"}},networkId:{serializedName:"network_id",required:!0,type:{name:"String"}},peerPubkey:{serializedName:"peer_pubkey",required:!0,type:{name:"String"}},topKeyBlockHash:{serializedName:"top_key_block_hash",required:!0,type:{name:"String"}},topBlockHeight:{serializedName:"top_block_height",required:!0,type:{name:"String"}}}}},Bi={type:{name:"Composite",className:"Protocol",modelProperties:{version:{serializedName:"version",required:!0,type:{name:"String"}},effectiveAtHeight:{serializedName:"effective_at_height",required:!0,type:{name:"String"}}}}},$i={type:{name:"Composite",className:"PeerConnections",modelProperties:{inbound:{serializedName:"inbound",required:!0,type:{name:"String"}},outbound:{serializedName:"outbound",required:!0,type:{name:"String"}}}}},Di={type:{name:"Composite",className:"SpendTx",modelProperties:{recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}}}}},Vi={type:{name:"Composite",className:"OracleRegisterTx",modelProperties:{queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"Ttl"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}}}}},Fi={type:{name:"Composite",className:"OracleExtendTx",modelProperties:{fee:{serializedName:"fee",required:!0,type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}}}}},Hi={type:{name:"Composite",className:"OracleQueryTx",modelProperties:{oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},ji={type:{name:"Composite",className:"OracleRespondTx",modelProperties:{queryId:{serializedName:"query_id",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Gi={type:{name:"Composite",className:"NamePreclaimTx",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Ui={type:{name:"Composite",className:"NameClaimTx",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},nameSalt:{serializedName:"name_salt",required:!0,type:{name:"String"}},nameFee:{serializedName:"name_fee",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Zi={type:{name:"Composite",className:"NameUpdateTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},nameTtl:{serializedName:"name_ttl",required:!0,type:{name:"String"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{serializedName:"client_ttl",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Wi={type:{name:"Composite",className:"NameTransferTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Ki={type:{name:"Composite",className:"NameRevokeTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Qi={type:{name:"Composite",className:"CommitmentId",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}}}}},Li={type:{name:"Composite",className:"NameHash",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}}}}},Ji={type:{name:"Composite",className:"ChannelCreateTx",modelProperties:{initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},responderAmount:{serializedName:"responder_amount",required:!0,type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",required:!0,type:{name:"String"}},lockPeriod:{serializedName:"lock_period",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}}}}},Yi={type:{name:"Composite",className:"ChannelDepositTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}}}}},Xi={type:{name:"Composite",className:"ChannelWithdrawTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},toId:{serializedName:"to_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}}}}},es={type:{name:"Composite",className:"ChannelForceProgressTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}}}}},ts={type:{name:"Composite",className:"ChannelCloseMutualTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",required:!0,type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}}}}},rs={type:{name:"Composite",className:"ChannelCloseSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},ns={type:{name:"Composite",className:"ChannelSlashTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},as={type:{name:"Composite",className:"ChannelSettleTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",required:!0,type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}}}}},is={type:{name:"Composite",className:"ChannelSnapshotSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},ss={type:{name:"Composite",className:"ChannelSetDelegatesTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},os={type:{name:"Composite",className:"PubKey",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}}}}},ls={type:{name:"Composite",className:"PeerDetails",modelProperties:{host:{serializedName:"host",required:!0,type:{name:"String"}},port:{serializedName:"port",required:!0,type:{name:"String"}},firstSeen:{serializedName:"first_seen",required:!0,type:{name:"String"}},lastSeen:{serializedName:"last_seen",required:!0,type:{name:"String"}},genesisHash:{serializedName:"genesis_hash",required:!0,type:{name:"String"}},topHash:{serializedName:"top_hash",required:!0,type:{name:"String"}},topDifficulty:{serializedName:"top_difficulty",required:!0,type:{name:"String"}},networkId:{serializedName:"network_id",type:{name:"String"}},nodeVersion:{serializedName:"node_version",type:{name:"String"}},nodeRevision:{serializedName:"node_revision",type:{name:"String"}},nodeVendor:{serializedName:"node_vendor",type:{name:"String"}},nodeOs:{serializedName:"node_os",type:{name:"String"}}}}},cs={type:{name:"Composite",className:"Peers",modelProperties:{peers:{serializedName:"peers",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},blocked:{serializedName:"blocked",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},ds={type:{name:"Composite",className:"PeerCount",modelProperties:{connected:{serializedName:"connected",type:{name:"Composite",className:"PeerCountConnected"}},available:{serializedName:"available",type:{name:"Composite",className:"PeerCountAvailable"}},blocked:{serializedName:"blocked",required:!0,type:{name:"String"}}}}},us={type:{name:"Composite",className:"PeerCountConnected",modelProperties:{inbound:{serializedName:"inbound",type:{name:"String"}},outbound:{serializedName:"outbound",type:{name:"String"}}}}},ms={type:{name:"Composite",className:"PeerCountAvailable",modelProperties:{verified:{serializedName:"verified",type:{name:"String"}},unverified:{serializedName:"unverified",type:{name:"String"}}}}},ps={type:{name:"Composite",className:"ContractCreateTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},hs={type:{name:"Composite",className:"ContractCallTx",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},ys={type:{name:"Composite",className:"UnsignedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},gs={type:{name:"Composite",className:"TokenSupply",modelProperties:{accounts:{serializedName:"accounts",type:{name:"String"}},contracts:{serializedName:"contracts",type:{name:"String"}},contractOracles:{serializedName:"contract_oracles",type:{name:"String"}},locked:{serializedName:"locked",type:{name:"String"}},oracles:{serializedName:"oracles",type:{name:"String"}},oracleQueries:{serializedName:"oracle_queries",type:{name:"String"}},pendingRewards:{serializedName:"pending_rewards",type:{name:"String"}},total:{serializedName:"total",type:{name:"String"}}}}},fs={type:{name:"Composite",className:"GAAttachTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",required:!0,type:{name:"String"}}}}},Ns={type:{name:"Composite",className:"GAMetaTx",modelProperties:{gaId:{serializedName:"ga_id",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},authData:{serializedName:"auth_data",required:!0,type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},Cs={type:{name:"Composite",className:"PayingForTx",modelProperties:{payerId:{serializedName:"payer_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},Ss={type:{name:"Composite",className:"CheckTxInPoolResponse",modelProperties:{status:{serializedName:"status",required:!0,type:{name:"String"}}}}},ws={serializedName:"OffChainTransfer",type:{name:"Composite",className:"OffChainTransfer",uberParent:"OffChainUpdate",polymorphicDiscriminator:si.type.polymorphicDiscriminator,modelProperties:{...si.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},zs={serializedName:"OffChainWithdrawal",type:{name:"Composite",className:"OffChainWithdrawal",uberParent:"OffChainUpdate",polymorphicDiscriminator:si.type.polymorphicDiscriminator,modelProperties:{...si.type.modelProperties,to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},vs={serializedName:"OffChainDeposit",type:{name:"Composite",className:"OffChainDeposit",uberParent:"OffChainUpdate",polymorphicDiscriminator:si.type.polymorphicDiscriminator,modelProperties:{...si.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},Ts={serializedName:"OffChainNewContract",type:{name:"Composite",className:"OffChainNewContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:si.type.polymorphicDiscriminator,modelProperties:{...si.type.modelProperties,owner:{serializedName:"owner",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},code:{serializedName:"code",type:{name:"Composite",className:"ByteCode"}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},bs={serializedName:"OffChainCallContract",type:{name:"Composite",className:"OffChainCallContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:si.type.polymorphicDiscriminator,modelProperties:{...si.type.modelProperties,caller:{serializedName:"caller",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},xs={type:{name:"Composite",className:"CreateContractUnsignedTx",modelProperties:{...ys.type.modelProperties,contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}}}}};let qs={"Tx.Tx":ai,OffChainUpdate:si,"OffChainUpdate.OffChainTransfer":ws,"OffChainUpdate.OffChainWithdrawal":zs,"OffChainUpdate.OffChainDeposit":vs,"OffChainUpdate.OffChainNewContract":Ts,"OffChainUpdate.OffChainCallContract":bs};const Ps={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},As={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},_s={parameterPath:"intAsString",mapper:{defaultValue:!1,serializedName:"int-as-string",type:{name:"Boolean"}}},Is={parameterPath:"hash",mapper:{serializedName:"hash",required:!0,type:{name:"String"}}},ks={parameterPath:"height",mapper:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}},Os={parameterPath:"index",mapper:{constraints:{InclusiveMinimum:1},serializedName:"index",required:!0,type:{name:"Number"}}},Es={parameterPath:"pubkey",mapper:{serializedName:"pubkey",required:!0,type:{name:"String"}}},Ms={parameterPath:["options","strategy"],mapper:{defaultValue:"max",serializedName:"strategy",type:{name:"Enum",allowedValues:["max","continuity"]}}},Rs={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},Bs={parameterPath:"body",mapper:hi},$s={parameterPath:"body",mapper:bi},Ds={parameterPath:["options","from"],mapper:{serializedName:"from",type:{name:"String"}}},Vs={parameterPath:["options","limit"],mapper:{defaultValue:20,constraints:{InclusiveMaximum:1e3,InclusiveMinimum:1},serializedName:"limit",type:{name:"Number"}}},Fs={parameterPath:["options","type"],mapper:{defaultValue:"all",serializedName:"type",type:{name:"Enum",allowedValues:["open","closed","all"]}}},Hs={parameterPath:"queryId",mapper:{serializedName:"query-id",required:!0,type:{name:"String"}}},js={parameterPath:"name",mapper:{serializedName:"name",required:!0,type:{name:"String"}}};class Gs extends Ka.S{constructor(e,t){var r,n;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const a={requestContentType:"application/json; charset=utf-8"},i="azsdk-js-node/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`,o={...a,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(r=null!==(n=t.endpoint)&&void 0!==n?n:t.baseUri)&&void 0!==r?r:"{$host}"};super(o),this.$host=e}getTopHeader(e){return this.sendOperationRequest({options:e},Zs)}getCurrentKeyBlock(e){return this.sendOperationRequest({options:e},Ws)}getCurrentKeyBlockHash(e){return this.sendOperationRequest({options:e},Ks)}getCurrentKeyBlockHeight(e){return this.sendOperationRequest({options:e},Qs)}getPendingKeyBlock(e){return this.sendOperationRequest({options:e},Ls)}getKeyBlockByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Js)}getKeyBlockByHeight(e,t){return this.sendOperationRequest({height:e,options:t},Ys)}getMicroBlockHeaderByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Xs)}getMicroBlockTransactionsByHash(e,t){return this.sendOperationRequest({hash:e,options:t},eo)}getMicroBlockTransactionByHashAndIndex(e,t,r){return this.sendOperationRequest({hash:e,index:t,options:r},to)}getMicroBlockTransactionsCountByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ro)}getCurrentGeneration(e){return this.sendOperationRequest({options:e},no)}getGenerationByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ao)}getGenerationByHeight(e,t){return this.sendOperationRequest({height:e,options:t},io)}getAccountByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},so)}getAccountByPubkeyAndHeight(e,t,r){return this.sendOperationRequest({pubkey:e,height:t,options:r},oo)}getAccountByPubkeyAndHash(e,t,r){return this.sendOperationRequest({pubkey:e,hash:t,options:r},lo)}getPendingAccountTransactionsByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},co)}getAccountNextNonce(e,t){return this.sendOperationRequest({pubkey:e,options:t},uo)}protectedDryRunTxs(e,t){return this.sendOperationRequest({body:e,options:t},mo)}getTransactionByHash(e,t){return this.sendOperationRequest({hash:e,options:t},po)}getTransactionInfoByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ho)}postTransaction(e,t){return this.sendOperationRequest({body:e,options:t},yo)}getContract(e,t){return this.sendOperationRequest({pubkey:e,options:t},go)}getContractCode(e,t){return this.sendOperationRequest({pubkey:e,options:t},fo)}getContractPoI(e,t){return this.sendOperationRequest({pubkey:e,options:t},No)}getOracleByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Co)}getOracleQueriesByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},So)}getOracleQueryByPubkeyAndQueryId(e,t,r){return this.sendOperationRequest({pubkey:e,queryId:t,options:r},wo)}getNameEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},zo)}getChannelByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},vo)}getPeerPubkey(e){return this.sendOperationRequest({options:e},To)}getStatus(e){return this.sendOperationRequest({options:e},bo)}getChainEnds(e){return this.sendOperationRequest({options:e},xo)}}const Us=Qa.Q(n,!1),Zs={path:"/v3/headers/top",httpMethod:"GET",responses:{200:{bodyMapper:La},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As],headerParameters:[Ps],serializer:Us},Ws={path:"/v3/key-blocks/current",httpMethod:"GET",responses:{200:{bodyMapper:Ya},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As],headerParameters:[Ps],serializer:Us},Ks={path:"/v3/key-blocks/current/hash",httpMethod:"GET",responses:{200:{bodyMapper:Xa},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As],headerParameters:[Ps],serializer:Us},Qs={path:"/v3/key-blocks/current/height",httpMethod:"GET",responses:{200:{bodyMapper:ei},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As],headerParameters:[Ps],serializer:Us},Ls={path:"/v3/key-blocks/pending",httpMethod:"GET",responses:{200:{bodyMapper:Ya},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As],headerParameters:[Ps],serializer:Us},Js={path:"/v3/key-blocks/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Ya},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Is],headerParameters:[Ps],serializer:Us},Ys={path:"/v3/key-blocks/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:Ya},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,ks],headerParameters:[Ps],serializer:Us},Xs={path:"/v3/micro-blocks/hash/{hash}/header",httpMethod:"GET",responses:{200:{bodyMapper:ti},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Is],headerParameters:[Ps],serializer:Us},eo={path:"/v3/micro-blocks/hash/{hash}/transactions",httpMethod:"GET",responses:{200:{bodyMapper:ri},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Is],headerParameters:[Ps],serializer:Us},to={path:"/v3/micro-blocks/hash/{hash}/transactions/index/{index}",httpMethod:"GET",responses:{200:{bodyMapper:ni},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Is,Os],headerParameters:[Ps],serializer:Us},ro={path:"/v3/micro-blocks/hash/{hash}/transactions/count",httpMethod:"GET",responses:{200:{bodyMapper:di},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Is],headerParameters:[Ps],serializer:Us},no={path:"/v3/generations/current",httpMethod:"GET",responses:{200:{bodyMapper:ui},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As],headerParameters:[Ps],serializer:Us},ao={path:"/v3/generations/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:ui},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Is],headerParameters:[Ps],serializer:Us},io={path:"/v3/generations/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:ui},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,ks],headerParameters:[Ps],serializer:Us},so={path:"/v3/accounts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:mi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Es],headerParameters:[Ps],serializer:Us},oo={path:"/v3/accounts/{pubkey}/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:mi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,ks,Es],headerParameters:[Ps],serializer:Us},lo={path:"/v3/accounts/{pubkey}/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:mi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Is,Es],headerParameters:[Ps],serializer:Us},co={path:"/v3/accounts/{pubkey}/transactions/pending",httpMethod:"GET",responses:{200:{bodyMapper:ri},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Es],headerParameters:[Ps],serializer:Us},uo={path:"/v3/accounts/{pubkey}/next-nonce",httpMethod:"GET",responses:{200:{bodyMapper:pi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s,Ms],urlParameters:[As,Es],headerParameters:[Ps],serializer:Us},mo={path:"/v3/dry-run",httpMethod:"POST",responses:{200:{bodyMapper:Ci},403:{bodyMapper:Ja,isError:!0}},requestBody:Bs,queryParameters:[_s],urlParameters:[As],headerParameters:[Ps,Rs],mediaType:"json",serializer:Us},po={path:"/v3/transactions/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:ni},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Is],headerParameters:[Ps],serializer:Us},ho={path:"/v3/transactions/{hash}/info",httpMethod:"GET",responses:{200:{bodyMapper:vi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Is],headerParameters:[Ps],serializer:Us},yo={path:"/v3/transactions",httpMethod:"POST",responses:{200:{bodyMapper:xi},400:{bodyMapper:Ja,isError:!0}},requestBody:$s,queryParameters:[_s],urlParameters:[As],headerParameters:[Ps,Rs],mediaType:"json",serializer:Us},go={path:"/v3/contracts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:qi},400:{bodyMapper:Ja,isError:!0},404:{isError:!0}},queryParameters:[_s],urlParameters:[As,Es],headerParameters:[Ps],serializer:Us},fo={path:"/v3/contracts/{pubkey}/code",httpMethod:"GET",responses:{200:{bodyMapper:Pi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Es],headerParameters:[Ps],serializer:Us},No={path:"/v3/contracts/{pubkey}/poi",httpMethod:"GET",responses:{200:{bodyMapper:Ai},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Es],headerParameters:[Ps],serializer:Us},Co={path:"/v3/oracles/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:_i},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Es],headerParameters:[Ps],serializer:Us},So={path:"/v3/oracles/{pubkey}/queries",httpMethod:"GET",responses:{200:{bodyMapper:Ii},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s,Ds,Vs,Fs],urlParameters:[As,Es],headerParameters:[Ps],serializer:Us},wo={path:"/v3/oracles/{pubkey}/queries/{query-id}",httpMethod:"GET",responses:{200:{bodyMapper:ki},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Es,Hs],headerParameters:[Ps],serializer:Us},zo={path:"/v3/names/{name}",httpMethod:"GET",responses:{200:{bodyMapper:Oi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,js],headerParameters:[Ps],serializer:Us},vo={path:"/v3/channels/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Ei},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[_s],urlParameters:[As,Es],headerParameters:[Ps],serializer:Us},To={path:"/v3/peers/pubkey",httpMethod:"GET",responses:{200:{bodyMapper:Mi}},queryParameters:[_s],urlParameters:[As],headerParameters:[Ps],serializer:Us},bo={path:"/v3/status",httpMethod:"GET",responses:{200:{bodyMapper:Ri}},queryParameters:[_s],urlParameters:[As],headerParameters:[Ps],serializer:Us},xo={path:"/v3/status/chain-ends",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"String"}}}}}},queryParameters:[_s],urlParameters:[As],headerParameters:[Ps],serializer:Us};function qo(e,t,r){Ao(e,t),t.set(e,r)}function Po(e,t){Ao(e,t),t.add(e)}function Ao(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function _o(e,t,r){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return r}const Io=["balance","queryFee","fee","amount","nameFee","channelAmount","initiatorAmount","responderAmount","channelReserve","initiatorAmountFinal","responderAmountFinal","gasPrice","deposit"],ko=["time","gas","gasUsed","nameSalt","nonce","nextNonce","height","blockHeight","topBlockHeight","ttl","nameTtl","clientTtl","inbound","outbound","peerCount","pendingTransactionsCount","effectiveAtHeight","version","solutions","round"];var Oo=new WeakSet,Eo=new WeakSet,Mo=new WeakSet;class Ro extends Gs{constructor(){super(...arguments),Po(this,Mo),Po(this,Eo),Po(this,Oo)}async sendOperationRequest(e,t){const r=Ze(e,(e=>{let[t,r]=e;return[t,_o(this,Eo,$o).call(this,r)]}));return _o(this,Mo,Do).call(this,await super.sendOperationRequest(r,t))}}function Bo(e,t){return Array.isArray(e)?e.map((e=>_o(this,Oo,Bo).call(this,e,t))):null!=e&&"object"===typeof e?Ze(e,(e=>{let[r,n]=e;return null==n?[r,n]:Io.some((e=>e===r))?[r,t.bigInt(n)]:ko.some((e=>e===r))?[r,t.number(n)]:[r,_o(this,Oo,Bo).call(this,n,t)]})):e}function $o(e){return _o(this,Oo,Bo).call(this,e,{bigInt:e=>e instanceof Dt.Z?e.toFixed():e.toString(),number:e=>e.toString()})}function Do(e){return _o(this,Oo,Bo).call(this,e,{bigInt:e=>BigInt(e),number:e=>+e})}var Vo=new WeakMap;class Fo extends Ro{constructor(e){let{ignoreVersion:t=!1,retryCount:r=3,retryOverallDelay:n=800,...a}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(super(e,{allowInsecureConnection:!0,additionalPolicies:[Ha(),ja(),Wa(r,n),Ua((e=>` ${e.reason}`))],...a}),qo(this,Vo,{writable:!0,value:void 0}),!t){const e=this.getStatus(),t=e.then((e=>{let{nodeVersion:t}=e;return t}),(e=>e));(0,Jr.Z)(this,Vo,e.then((e=>{let{networkId:t}=e;return t}),(e=>e))),this.pipeline.addPolicy(Za("node","/v3/status",t,"6.2.0","7.0.0"))}this.intAsString=!0}async getNetworkId(){var e;null!==(e=(0,Yr.Z)(this,Vo))&&void 0!==e||(0,Jr.Z)(this,Vo,this.getStatus().then((e=>{let{networkId:t}=e;return t})));const t=await(0,Yr.Z)(this,Vo);if(t instanceof Error)throw t;return t}async getNodeInfo(){const{nodeVersion:e,networkId:t,protocols:r,topBlockHeight:n}=await this.getStatus(),a=r.filter((e=>{let{effectiveAtHeight:t}=e;return n>=t})).reduce(((e,t)=>t.effectiveAtHeight>e.effectiveAtHeight?t:e),{effectiveAtHeight:-1,version:0}).version;return{url:this.$host,nodeNetworkId:t,version:e,consensusProtocolVersion:a}}}function Ho(e){var t;const r=Oa(e);switch(r.tag){case Jt.SignedTx:return Ho(Ia(r.encodedTx));case Jt.GaMetaTx:return r.gaId;default:}const n=null===(t=_a(r.tag,r.version).find((e=>{let[t]=e;return"nonce"===t})))||void 0===t?void 0:t[1];if(null==n)throw new A(`Transaction doesn't have nonce: ${Jt[r.tag]}`);if(!("senderKey"in n))throw new V;const a=r[n.senderKey];return a.replace(/^ok_/,"ak_")}function jo(e){let{innerTx:t,gasUsed:r,queryFee:n,isInitiator:a}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=Oa(e);if(i.tag===Jt.SignedTx)throw new k("Transaction shouldn't be a SignedTx, use `getExecutionCostBySignedTx` instead");let s=0n;return"fee"in i&&"freeloader"!==t&&(s+=BigInt(i.fee)),i.tag===Jt.NameClaimTx&&(s+=BigInt(i.nameFee)),i.tag===Jt.OracleQueryTx&&(s+=BigInt(i.queryFee)),i.tag===Jt.OracleResponseTx&&(s-=BigInt(null!==n&&void 0!==n?n:0)),i.tag===Jt.ChannelSettleTx&&(!0===a&&(s-=BigInt(i.initiatorAmountFinal)),!1===a&&(s-=BigInt(i.responderAmountFinal))),(i.tag===Jt.SpendTx&&i.senderId!==i.recipientId||i.tag===Jt.ContractCreateTx||i.tag===Jt.ContractCallTx||i.tag===Jt.ChannelDepositTx)&&"fee-payer"!==t&&(s+=BigInt(i.amount)),i.tag===Jt.ContractCreateTx&&(s+=BigInt(i.deposit)),i.tag!==Jt.ContractCreateTx&&i.tag!==Jt.ContractCallTx&&i.tag!==Jt.GaAttachTx&&i.tag!==Jt.GaMetaTx||"freeloader"===t||(s+=BigInt(i.gasPrice)*BigInt(null!==r&&void 0!==r?r:i.gasLimit)),i.tag!==Jt.GaMetaTx&&i.tag!==Jt.PayingForTx||(s+=jo(Ia(i.tx.encodedTx),i.tag===Jt.PayingForTx?{innerTx:"fee-payer"}:{})),s}function Go(e,t,r){const n=Oa(e,Jt.SignedTx);if(n.encodedTx.tag===Jt.GaMetaTx)return jo(Ia(n.encodedTx),r);const a=Ia(n.encodedTx),i=Ho(a),[s,o]=[!0,!1].map((e=>xt($a(a,t,e),n.signatures[0],i)));if(!s&&!o)throw new A("Can't verify signature");return jo(Ia(n.encodedTx),{...s&&{innerTx:"freeloader"},...r})}async function Uo(e,t){let{isMined:r,...n}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=Oa(e);const i=a.tag===Jt.SignedTx,s=i&&!0===r&&Ea(e);if(a.tag===Jt.SignedTx&&(a=a.encodedTx),null==n.gasUsed&&!1!==s&&[Jt.ContractCreateTx,Jt.ContractCallTx,Jt.GaAttachTx,Jt.GaMetaTx].includes(a.tag)){const{callInfo:e,gaInfo:r}=await t.getTransactionInfoByHash(s),a=null!==e&&void 0!==e?e:r;if(null==a)throw new D(`callInfo and gaInfo is not available for transaction ${s}`);n.gasUsed=a.gasUsed}if(null==n.queryFee&&Jt.OracleResponseTx===a.tag&&(n.queryFee=(await t.getOracleByPubkey(a.oracleId)).queryFee.toString()),null==n.isInitiator&&Jt.ChannelSettleTx===a.tag&&!0!==r){const{initiatorId:e}=await t.getChannelByPubkey(a.channelId);n.isInitiator=a.fromId===e}return i?Go(e,await t.getNetworkId(),n):jo(e,n)}const{Buffer:Zo}=$e,Wo=[];async function Ko(e,t,r){const n=Ho(Ia(e)),[a,{height:i},{consensusProtocolVersion:s,nodeNetworkId:o}]=await Promise.all([t.getAccountByPubkey(n).catch((e=>{if(!Je(e))throw e;return{id:n,balance:0n,nonce:0}})).then((e=>({...e,id:e.id}))),t.getCurrentKeyBlockHeight(),t.getNodeInfo()]);return(await Promise.all(Wo.map((async n=>n(e,{node:t,account:a,height:i,consensusProtocolVersion:s,nodeNetworkId:o,parentTxTypes:r}))))).flat()}async function Qo(e,t){const r=new Fo(t.$host,{ignoreVersion:!0,pipeline:t.pipeline.clone(),additionalPolicies:[Ga()]});return Ko(Oa(e),r,[])}function Lo(e,t){let{_expectedMineRate:r=18e4,_microBlockCycle:n=3e3,_maxPollInterval:a=5e3}=t;const i={block:r,microblock:n}[e];return Math.min(i/3,a)}Wo.push(((e,t)=>{let{account:r,nodeNetworkId:n,parentTxTypes:a}=t;if(e.tag!==Jt.SignedTx)return[];const{encodedTx:i,signatures:s}=e;if(null==(null!==i&&void 0!==i?i:s))return[];if(1!==s.length)return[];const o=Zo.from([n,...a.includes(Jt.PayingForTx)?["inner_tx"]:[]].join("-")),l=gt(Ia(i)),c=Ke([o,l]),d=Ke([o,zt(l)]);return xt(c,s[0],r.id)||xt(d,s[0],r.id)?[]:[{message:"Signature cannot be verified, please ensure that you transaction have the correct prefix and the correct private key for the sender address",key:"InvalidSignature",checkedKeys:["encodedTx","signatures"]}]}),(async(e,t)=>{let r,{node:n,parentTxTypes:a}=t;return"encodedTx"in e&&(r=e.encodedTx),"tx"in e&&(r=e.tx),null==r?[]:Ko(r,n,[...a,e.tag])}),((e,t)=>{let{height:r}=t;return"ttl"in e?0===e.ttl||e.ttl>=r?[]:[{message:`TTL ${e.ttl} is already expired, current height is ${r}`,key:"ExpiredTTL",checkedKeys:["ttl"]}]:[]}),(async(e,t)=>{let{account:r,parentTxTypes:n,node:a}=t;if(0!==n.length)return[];const i=await Uo(Ia(e),a).catch((()=>0n));return i<=r.balance?[]:[{message:`Account balance ${r.balance} is not enough to execute the transaction that costs ${i}`,key:"InsufficientBalance",checkedKeys:["amount","fee","nameFee","gasLimit","gasPrice"]}]}),((e,t)=>{let r,{account:n}=t;return e.tag===Jt.SignedTx&&"generalized"===n.kind&&0!==e.signatures.length&&(r="Generalized account can't be used to generate SignedTx with signatures"),e.tag===Jt.GaMetaTx&&"basic"===n.kind&&(r="Basic account can't be used to generate GaMetaTx"),null==r?[]:[{message:r,key:"InvalidAccountType",checkedKeys:["tag"]}]}),((e,t)=>{var r,n;let{consensusProtocolVersion:a}=t;const i=Jt.Oracle===e.tag||Jt.OracleRegisterTx===e.tag,s=Jt.ContractCreateTx===e.tag||Jt.GaAttachTx===e.tag,o=Jt.ContractCallTx===e.tag||Jt.GaMetaTx===e.tag,l=null!==(r=null!==(n=i?"oracle-call":null)&&void 0!==n?n:s?"contract-create":null)&&void 0!==r?r:o?"contract-call":null;if(null==l)return[];const c=Xt[a][l];let d;if("abiVersion"in e&&(d={abiVersion:e.abiVersion}),"ctVersion"in e&&(d=e.ctVersion),null==d)throw new V;return!c.abiVersion.includes(d.abiVersion)||s&&!c.vmVersion.includes(d.vmVersion)?[{message:`ABI/VM version ${JSON.stringify(d)} is wrong, supported is: ${JSON.stringify(c)}`,key:"VmAndAbiVersionMismatch",checkedKeys:["ctVersion","abiVersion"]}]:[]}),(async(e,t)=>{let{node:r}=t;if(Jt.ContractCallTx!==e.tag)return[];try{const{active:t}=await r.getContract(e.contractId);return t?[]:[{message:`Contract ${e.contractId} is not active`,key:"ContractNotActive",checkedKeys:["contractId"]}]}catch(a){var n;if(!(a instanceof je.o)||null==(null===(n=a.response)||void 0===n?void 0:n.bodyAsText))throw a;return[{message:JSON.parse(a.response.bodyAsText).reason,key:"ContractNotFound",checkedKeys:["contractId"]}]}}));class Jo extends A{constructor(e,t,r){super(e),this.name="InvalidTxError",this.validation=t,this.transaction=r}}async function Yo(e){let{onNode:t}=e;return(await t.getCurrentKeyBlockHeight()).height}async function Xo(e,t){var r;let{blocks:n=5,interval:a,onNode:i,...s}=t;null!==(r=a)&&void 0!==r||(a=Lo("microblock",s));const o=await Yo({onNode:i})+n;do{const t=await i.getTransactionByHash(e);if(-1!==t.blockHeight)return t;await Ue(a)}while(await Yo({onNode:i})<o);throw new M(n,e)}async function el(e,t){var r;let n,{interval:a,onNode:i,...s}=t;null!==(r=a)&&void 0!==r||(a=Lo("block",s));do{null!=n&&await Ue(a),n=(await i.getCurrentKeyBlockHeight()).height}while(n<e);return n}async function tl(e,t){let{confirm:r=3,onNode:n,...a}=t;const{blockHeight:i}=await n.getTransactionByHash(e),s=await el(i+r,{onNode:n,...a}),{blockHeight:o}=await n.getTransactionByHash(e);switch(o){case-1:throw new Ce(e);case i:return s;default:return tl(e,{onNode:n,confirm:r,...a})}}async function rl(e,t){let{onNode:r,onAccount:n,verify:a=!0,waitMined:i=!0,confirm:s,innerTx:o,...l}=t;const c=await n.signTransaction(e,{...l,onNode:r,innerTx:o,networkId:await r.getNetworkId()});if(!0===o)return{hash:Ea(c),rawTx:c};if(a){const e=await Qo(c,r);if(e.length>0){const t=`Transaction verification errors: ${e.map((e=>e.message)).join(", ")}`;throw new Jo(t,e,c)}}try{let e;try{e=null!=n?`tx-${n.address}`:null}catch(d){e=null}const{txHash:t}=await r.postTransaction({tx:c},null!=e?{requestOptions:{customHeaders:{__queue:e}}}:{});if(i){const e=await Xo(t,{onNode:r,...l}),n={...e,hash:e.hash,rawTx:c};if(null!=s&&(!0===s||s>0)){const e="boolean"===typeof s?void 0:s;return{...n,confirmationHeight:await tl(t,{onNode:r,confirm:e,...l})}}return n}return{hash:t,rawTx:c}}catch(d){throw Ye(d),Object.assign(d,{rawTx:c,verifyTx:async()=>Qo(c,r)})}}async function nl(e,t){let{height:r,hash:n,onNode:a}=t;return null!=r?a.getAccountByPubkeyAndHeight(e,r):null!=n?a.getAccountByPubkeyAndHash(e,n):a.getAccountByPubkey(e)}async function al(e,t){let{format:r=xr.AETTOS,...n}=t;const a=e.startsWith("ok_")?ft(gt(e),tt.AccountAddress):e,{balance:i}=await nl(a,n).catch((e=>{if(!Je(e))throw e;return{balance:0n}}));return Pr(i,{targetDenomination:r})}async function il(e){let{onNode:t}=e;return t.getCurrentGeneration()}async function sl(e,t){let{onNode:r}=t;return"number"===typeof e?r.getGenerationByHeight(e):r.getGenerationByHash(e)}async function ol(e,t){let{onNode:r}=t;return(await r.getMicroBlockTransactionsByHash(e)).transactions}async function ll(e,t){let{onNode:r}=t;return"number"===typeof e?r.getKeyBlockByHeight(e):r.getKeyBlockByHash(e)}async function cl(e,t){let{onNode:r}=t;return r.getMicroBlockHeaderByHash(e)}const dl=new Map;async function ul(e,t){const r=dl.get(e);if(dl.delete(e),null==r)throw new D("Can't get dry-run request");let n;try{const e="number"===typeof r[0].top?(await ll(r[0].top,{onNode:t})).hash:r[0].top;n=await t.protectedDryRunTxs({top:e,txEvents:r[0].txEvents,txs:r.map((e=>({tx:e.tx}))),accounts:Array.from(new Set(r.map((e=>e.accountAddress)))).map((e=>({pubKey:e,amount:ya.amount})))})}catch(s){return void r.forEach((e=>{let{reject:t}=e;return t(s)}))}const{results:a,txEvents:i}=n;a.forEach(((e,t)=>{let{result:n,reason:a,...s}=e;const{resolve:o,reject:l,tx:c,accountAddress:d}=r[t];"ok"===n?o({...s,txEvents:i}):l(Object.assign(new ye(a),{tx:c,accountAddress:d}))}))}async function ml(e,t,r){var n;let{top:a,txEvents:i,combine:s,onNode:o}=r;const l=!0===s?[a,i].join():"immediate",c=null!==(n=dl.get(l))&&void 0!==n?n:[];return dl.set(l,c),new Promise(((r,n)=>{var d;c.push({tx:e,accountAddress:t,top:a,txEvents:i,resolve:r,reject:n}),!0===s?null!==(d=c.timeout)&&void 0!==d||(c.timeout=setTimeout((()=>{ul(l,o)}))):ul(l,o)}))}async function pl(e,t){let{onNode:r}=t;return r.getContractCode(e)}async function hl(e,t){let{onNode:r}=t;return r.getContract(e)}async function yl(e,t){let{onNode:r}=t;return r.getNameEntryByName(e)}async function gl(e,t,r){let{verify:n=!0,resolveByNode:a=!1,onNode:i}=r;if(wr(e)){if(n||a){const r=await i.getNameEntryByName(e),n=r.pointers.find((e=>e.key===t));if(null==n)throw new H(e,t);if(a)return n.id}return fr(e)}try{return gt(e),e}catch(s){throw new G(`Invalid name or address: ${e}`)}}async function fl(e,t){const r=await ka({...t,tag:Jt.NameRevokeTx,nameId:e,accountId:t.onAccount.address});return rl(r,t)}async function Nl(e,t,r){let{extendPointers:n,...a}=r;const i={...!0===n&&Object.fromEntries((await yl(e,a)).pointers.map((e=>{let{key:t,id:r}=e;return[t,r]}))),...t},s=await ka({clientTtl:jt,nameTtl:Ft,...a,tag:Jt.NameUpdateTx,nameId:e,accountId:a.onAccount.address,pointers:Object.entries(i).map((e=>{let[t,r]=e;return{key:t,id:r}}))});return rl(s,a)}async function Cl(e,t,r){const n=await ka({...r,tag:Jt.NameTransferTx,nameId:e,accountId:r.onAccount.address,recipientId:t});return rl(n,r)}async function Sl(e,t){const r=await yl(e,t);return Object.freeze({...r,id:r.id,owner:r.owner,async update(r,n){return{...await Nl(e,r,{...t,...n}),...await Sl(e,{...t,...n})}},async transfer(r,n){return{...await Cl(e,r,{...t,...n}),...await Sl(e,{...t,...n})}},async revoke(r){return fl(e,{...t,...r})},async extendTtl(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ft,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(r>Ft||r<=0)throw new I("nameTtl",`a number between 1 and ${Ft} blocks`,r);return{...await Nl(e,{},{...t,...n,nameTtl:r,extendPointers:!0}),...await Sl(e,{...t,...n})}}})}async function wl(e,t,r){const n=await ka({...r,tag:Jt.NameClaimTx,accountId:r.onAccount.address,nameSalt:t,name:e}),a=await rl(n,r);if(!vr(e)){const t=null!=a.blockHeight&&a.blockHeight>0?await Sl(e,r):{};return Object.assign(a,t)}return a}async function zl(e,t){const r=wt(),n=Nr(e,r),a=await ka({...t,tag:Jt.NamePreclaimTx,accountId:t.onAccount.address,commitmentId:n});return Object.freeze({...await rl(a,t),salt:r,commitmentId:n,async claim(n){const{version:a,...i}=t;return wl(e,r,{...i,...n})}})}async function vl(e,t,r){return wl(e,0,{...r,nameFee:t})}async function Tl(e,t,r){return rl(await ka({...r,tag:Jt.SpendTx,senderId:r.onAccount.address,recipientId:await gl(t,"account_pubkey",r),amount:e}),r)}async function bl(e,t,r){if(e<0||e>1)throw new I("fraction","a number between 0 and 1",e);const n=await gl(t,"account_pubkey",r),a=r.onAccount.address,i=new Dt.Z(await al.bind(r.onAccount)(a,r)),s=i.times(e).integerValue(Dt.Z.ROUND_HALF_UP),{fee:o}=Oa(await ka({...r,tag:Jt.SpendTx,senderId:a,recipientId:n,amount:s}),Jt.SpendTx),l=s.plus(o).gt(i)?i.minus(o):s;return rl(await ka({...r,tag:Jt.SpendTx,senderId:a,recipientId:n,amount:l}),r)}async function xl(e,t){return rl(await ka({...t,tag:Jt.PayingForTx,payerId:t.onAccount.address,tx:e}),t)}function ql(e,t,r){var n;let{interval:a,onNode:i,...s}=r;null!==(n=a)&&void 0!==n||(a=Lo("microblock",s));const o=new Set,l=async()=>{var r;const n=(null!==(r=(await i.getOracleQueriesByPubkey(e)).oracleQueries)&&void 0!==r?r:[]).filter((e=>{let{id:t}=e;return!o.has(t)}));n.forEach((e=>{o.add(e.id),t(e)}))};let c=!1;return(async()=>{while(!c)await l().catch(console.error),await Ue(a)})(),()=>{c=!0}}async function Pl(e,t,r){var n;let a,i,s,{interval:o,onNode:l,...c}=r;null!==(n=o)&&void 0!==n||(o=Lo("microblock",c));do{({response:s,ttl:i}=await l.getOracleQueryByPubkeyAndQueryId(e,t));const r=gt(s);if(r.length>0)return r.toString();await Ue(o),a=await Yo({onNode:l})}while(i>=a);throw new E(a)}async function Al(e,t,r){const n=await r.onNode.getOracleQueryByPubkeyAndQueryId(e,t);return{...n,decodedQuery:gt(n.query).toString(),decodedResponse:gt(n.response).toString(),respond:async(e,n)=>kl(t,e,{...r,...n}),pollForResponse:async n=>Pl(e,t,{...r,...n})}}async function _l(e,t,r){var n;null!==(n=r.queryFee)&&void 0!==n||(r.queryFee=(await r.onNode.getOracleByPubkey(e)).queryFee.toString());const a=r.onAccount.address,i=await ka({queryTtlType:pa.type,queryTtlValue:pa.value,responseTtlType:ha.type,responseTtlValue:ha.value,...r,tag:Jt.OracleQueryTx,oracleId:e,senderId:a,query:t}),{nonce:s}=Oa(i,Jt.OracleQueryTx),o=hr(a,s,e);return{...await rl(i,r),...await Al(e,o,r)}}async function Il(e){const t=ft(gt(e.onAccount.address),tt.OracleAddress),r=await ka({oracleTtlType:ma.type,oracleTtlValue:ma.value,...e,tag:Jt.OracleExtendTx,oracleId:t});return{...await rl(r,e),...await Ol(t,e)}}async function kl(e,t,r){const n=ft(gt(r.onAccount.address),tt.OracleAddress),a=await ka({responseTtlType:ha.type,responseTtlValue:ha.value,...r,tag:Jt.OracleResponseTx,oracleId:n,queryId:e,response:t});return{...await rl(a,r),...await Ol(n,r)}}async function Ol(e,t){return{...await t.onNode.getOracleByPubkey(e),queries:(await t.onNode.getOracleQueriesByPubkey(e)).oracleQueries,...Ze({pollQueries:ql,postQuery:_l,respondToQuery:kl,extendOracle:Il,getQuery:Al},(r=>{let[n,a]=r;return[n,function(){for(var r=arguments.length,i=new Array(r),s=0;s<r;s++)i[s]=arguments[s];const o=i[i.length-1];return null!=o&&"object"===typeof o&&o.constructor===Object?Object.assign(o,{...t,...o}):i.push(t),a(...["extendOracle","respondToQuery"].includes(n)?[]:[e],...i)}]}))}}async function El(e,t,r){const n=r.onAccount.address,a=await ka({oracleTtlValue:ma.value,oracleTtlType:ma.type,...r,tag:Jt.OracleRegisterTx,accountId:n,queryFormat:e,responseFormat:t});return{...await rl(a,r),...await Ol(ft(gt(n),tt.OracleAddress),r)}}var Ml=r(9730);function Rl(e,t,r){$l(e,t),t.set(e,r)}function Bl(e,t){$l(e,t),t.add(e)}function $l(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Dl(e,t,r){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return r}const{Encoder:Vl}=Ml;var Fl=new WeakSet,Hl=new WeakSet,jl=new WeakSet,Gl=new WeakSet,Ul=new WeakMap;class Zl{async $compile(){if(null!=this.$options.bytecode)return this.$options.bytecode;if(null==this.$options.onCompiler)throw new k("Can't compile without compiler");if(null!=this.$options.sourceCode){const{bytecode:e}=await this.$options.onCompiler.compileBySourceCode(this.$options.sourceCode,this.$options.fileSystem);this.$options.bytecode=e}if(null!=this.$options.sourceCodePath){const{bytecode:e}=await this.$options.onCompiler.compile(this.$options.sourceCodePath);this.$options.bytecode=e}if(null==this.$options.bytecode)throw new k("Can't compile without sourceCode and sourceCodePath");return this.$options.bytecode}async $getCallResultByTxHash(e,t,r){const{callInfo:n}=await this.$options.onNode.getTransactionInfoByHash(e);if(null==n)throw new x(`callInfo is not available for transaction ${e}`);const a=n;return{...Dl(this,Fl,Wl).call(this,a,t,void 0,r),result:a}}async _estimateGas(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{result:n}=await this.$call(e,t,{...r,callStatic:!0});if(null==n)throw new V;const{gasUsed:a}=n;return Math.floor(1.25*a)}async $deploy(e,t){var r,n;const{callStatic:a,...i}={...this.$options,...t};if(null==this.$options.bytecode&&await this.$compile(),!0===a)return this.$call("init",e,{...i,callStatic:a});if(null!=this.$options.address)throw new Q;if(null==i.onAccount)throw new k("Can't deploy without account");const s=i.onAccount.address;if(null==this.$options.bytecode)throw new k("Can't deploy without bytecode");const o=await ka({...i,tag:Jt.ContractCreateTx,gasLimit:null!==(r=i.gasLimit)&&void 0!==r?r:await this._estimateGas("init",e,i),callData:this._calldata.encode(this._name,"init",e),code:this.$options.bytecode,ownerId:s});this.$options.address=Ma(o);const{hash:l,...c}=await Dl(this,Hl,Kl).call(this,o,"init",{...i,onAccount:i.onAccount});return{...c,...null!=(null===(n=c.result)||void 0===n?void 0:n.log)&&{decodedEvents:this.$decodeEvents(c.result.log,i)},owner:s,transaction:l,address:this.$options.address}}async $call(e,t){var r;let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{callStatic:a,top:i,...s}={...this.$options,...n},o=Dl(this,jl,Ql).call(this,e),l=this.$options.address,{onNode:c}=s;if(null==e)throw new ee;if("init"===e&&!0!==a)throw new J('"init" can be called only via dryRun');if("init"!==e&&null!=s.amount&&s.amount>0&&!o.payable)throw new ne(s.amount,e);let d;try{if(null==s.onAccount)throw new D("Use fallback account");d=s.onAccount.address}catch(p){const e=!0===a&&(p instanceof R&&"Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead"===p.message||p instanceof we||p instanceof D&&"Use fallback account"===p.message);if(!e)throw p;d=ya.pub}const u=this._calldata.encode(this._name,e,t);if(!0===a){if(null==s.nonce&&null!=i){const e="number"===typeof i?"height":"hash";s.nonce=(await nl(d,{[e]:i,onNode:c})).nonce+1}const t={...s,onNode:c,callData:u};let r;if("init"===e){if(null==this.$options.bytecode)throw new k('Can\'t dry-run "init" without bytecode');r=await ka({...t,tag:Jt.ContractCreateTx,code:this.$options.bytecode,ownerId:d})}else{if(null==l)throw new Y("Can't dry-run contract without address");r=await ka({...t,tag:Jt.ContractCallTx,callerId:d,contractId:l})}const{callObj:n,...a}=await ml(r,d,{...s,top:i});if(null==n)throw new D(`callObj is not available for transaction ${r}`);const o=n;return{...a,...Dl(this,Fl,Wl).call(this,o,e,r,s),tx:Oa(r),result:o,rawTx:r,hash:Ea(r),txData:void 0}}if(null!=i)throw new k("Can't handle `top` option in on-chain contract call");if(null==l)throw new Y("Can't call contract without address");const m=await ka({...s,tag:Jt.ContractCallTx,gasLimit:null!==(r=s.gasLimit)&&void 0!==r?r:await this._estimateGas(e,t,s),callerId:d,contractId:l,callData:u});if(null==s.onAccount)throw new k("Can't call contract on chain without account");return Dl(this,Hl,Kl).call(this,m,e,{...s,onAccount:s.onAccount})}$decodeEvents(e){let{omitUnknown:t,...r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e.map((e=>{const n=e.topics.map((e=>BigInt(e)));let a;try{a=Dl(this,Gl,Ll).call(this,e.address,n[0],r)}catch(l){if(null!==t&&void 0!==t&&t&&l instanceof ae)return null;throw l}const i=this._calldata.decodeEvent(a,e.data,n),[s,o]=Object.entries(i)[0];return{name:s,args:o,contract:{name:a,address:e.address}}})).filter((e=>null!=e))}static async initialize(e){let{onCompiler:t,onNode:r,bytecode:n,aci:a,address:i,sourceCodePath:s,sourceCode:o,fileSystem:l,validateBytecode:c,...d}=e;if(null==a&&null!=t){let e;var u;if(null!=s&&(e=await t.compile(s)),null!=o&&(e=await t.compileBySourceCode(o,l)),null!=e)a=e.aci,null!==(u=n)&&void 0!==u||(n=e.bytecode)}if(null==a)throw new X;if(null!=i&&(i=await gl(i,"contract_pubkey",{resolveByNode:!0,onNode:r})),null==i&&null==o&&null==s&&null==n)throw new Y("Can't create instance by ACI without address");if(null!=i){const e=await hl(i,{onNode:r});if(null==e.active)throw new L(i)}if(!0===c){if(null==i)throw new Y("Can't validate bytecode without contract address");const e=(await pl(i,{onNode:r})).bytecode;let a=!1;if(null!=n)a=n===e;else if(null!=o){if(null==t)throw new k("Can't validate bytecode without compiler");a=await t.validateBySourceCode(e,o,l)}else if(null!=s){if(null==t)throw new k("Can't validate bytecode without compiler");a=await t.validate(e,s)}if(!a)throw new K(null!=(null!==o&&void 0!==o?o:s)?"source code":"bytecode")}return new Jl({onCompiler:t,onNode:r,sourceCode:o,sourceCodePath:s,bytecode:n,aci:a,address:i,fileSystem:l,...d})}constructor(e){var t=this;let{aci:r,...n}=e;Bl(this,Gl),Bl(this,jl),Bl(this,Hl),Bl(this,Fl),Rl(this,Ul,{writable:!0,value:void 0}),this._aci=r;const a=r[r.length-1];if(null==a.contract)throw new k(`The last 'aci' item should have 'contract' key, got ${Object.keys(a)} keys instead`);(0,Jr.Z)(this,Ul,a.contract),this._name=(0,Yr.Z)(this,Ul).name,this._calldata=new Vl(r),this.$options=n,Object.assign(this,Object.fromEntries((0,Yr.Z)(this,Ul).functions.map((e=>{let{name:r,arguments:n,stateful:a}=e;const i="init"!==r&&!a;return[r,async function(){for(var e=arguments.length,a=new Array(e),s=0;s<e;s++)a[s]=arguments[s];const o=a.length===n.length+1?a.pop():{};if("object"!==typeof o)throw new R(`Options should be an object: ${o}`);return"init"===r?t.$deploy(a,{callStatic:i,...o}):t.$call(r,a,{callStatic:i,...o})}]}))))}}function Wl(e,t,r,n){let a,{returnType:i,returnValue:s,log:o}=e;switch(i){case"ok":{const e=Dl(this,jl,Ql).call(this,t);return{decodedResult:this._calldata.decode(this._name,e.name,s),decodedEvents:this.$decodeEvents(o,n)}}case"revert":a=this._calldata.decodeFateString(s);break;case"error":a=gt(s).toString();break;default:throw new D(`Unknown return type: ${i}`)}throw new te(a,r)}async function Kl(e,t,r){const n=await rl(e,{...this.$options,...r});return{hash:n.hash,tx:Oa(n.rawTx),txData:n,rawTx:n.rawTx,...null!=n.blockHeight&&await this.$getCallResultByTxHash(n.hash,t,r)}}function Ql(e){const t=(0,Yr.Z)(this,Ul).functions.find((t=>t.name===e));if(null!=t)return t;if("init"===e)return{arguments:[],name:"init",payable:!1,returns:"unit",stateful:!0};throw new re(`Function ${e} doesn't exist in contract`)}function Ll(e,t,r){let{contractAddressToName:n}=r;const a={...this.$options.contractAddressToName,...n};if(null!=a[e])return a[e];const i=(e,t)=>JSON.stringify(e)===JSON.stringify(t),s=this._aci.map((e=>{let{contract:t}=e;return t})).filter((e=>null===e||void 0===e?void 0:e.event)),o=s.map((e=>[e.name,e.event.variant])).map((e=>{let[t,r]=e;return r.map((e=>[t,Object.keys(e)[0],Object.values(e)[0]]))})).flat().filter((e=>{let[,r]=e;return BigInt(`0x${zt(r).toString("hex")}`)===t})).filter(((e,t,r)=>{let[,,n]=e;return!r.slice(0,t).some((e=>i(e[2],n)))}));switch(o.length){case 0:throw new ae(t.toString(),e);case 1:return o[0][0];default:throw new ie(e,o)}}const Jl=Zl;var Yl=Jl;const{Buffer:Xl}=$e;async function ec(e,t,r){return r.onAccount.sign(Ke([Xl.from(await r.onNode.getNetworkId()),...!0===r.omitAddress?[]:[gt(r.onAccount.address)],...t.map((e=>wr(e)?fr(e):e)).map((e=>gt(e))),gt(e)]),r)}const{Buffer:tc}=$e;async function rc(e,t,r){var n;let{onAccount:a,onCompiler:i,onNode:s,bytecode:o,aci:l,sourceCodePath:c,sourceCode:d,fileSystem:u,...m}=r;const p=a.address;if("generalized"===(await nl(p,{onNode:s})).kind)throw new k(`Account ${p} is already GA`);const h=await Yl.initialize({onAccount:a,onCompiler:i,onNode:s,bytecode:o,aci:l,sourceCodePath:c,sourceCode:d,fileSystem:u}),y=await ka({...m,tag:Jt.GaAttachTx,onNode:s,code:await h.$compile(),gasLimit:null!==(n=m.gasLimit)&&void 0!==n?n:await h._estimateGas("init",t,m),ownerId:p,callData:h._calldata.encode(h._name,"init",t),authFun:zt(e)}),g=Ma(y),{hash:f,rawTx:N}=await rl(y,{onNode:s,onAccount:a,onCompiler:i,...m});return Object.freeze({owner:p,transaction:f,rawTx:N,gaContractId:g})}async function nc(e,t){let{fee:r,gasPrice:n,onNode:a}=t;const{nodeNetworkId:i,consensusProtocolVersion:s}=await a.getNodeInfo();let o=zt(Ke([tc.from(i),gt(e)]));if(s===Kt.Ceres){if(null==r)throw new I("fee","provided (in Ceres)",r);if(null==n)throw new I("gasPrice","provided (in Ceres)",n);o=zt(gt(Ia({tag:Jt.GaMetaTxAuthData,fee:r,gasPrice:n,txHash:ft(o,tt.TxHash)})))}return o}async function ac(e,t){let{onNode:r}=t;const n=Oa(e,Jt.SignedTx);if(n.encodedTx.tag!==Jt.GaMetaTx)throw new I("transaction","to include GaMetaTx",Jt[n.encodedTx.tag]);return nc(Ia(n.encodedTx.tx.encodedTx),{fee:n.encodedTx.fee,gasPrice:n.encodedTx.gasPrice,onNode:r})}function ic(e){return new Proxy({},Object.fromEntries(["apply","construct","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","set","setPrototypeOf","get","has"].map((t=>[t,function(r){const n=e();for(var a=arguments.length,i=new Array(a>1?a-1:0),s=1;s<a;s++)i[s-1]=arguments[s];const o=Reflect[t](n,...i);return"function"===typeof o&&"get"===t?o.bind(n):o}]))))}const{InvalidTxError:sc,...oc}=a,lc={...oc,...i,...s,...o,createDelegationSignature:ec,...l};class cc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,S.Z)(this,"_options",{}),Object.assign(this._options,e)}_getOptions(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{...this._options,onAccount:ic((()=>this._options.onAccount)),onNode:ic((()=>this._options.onNode)),onCompiler:ic((()=>this._options.onCompiler)),...e}}async buildTx(e){return ka({...this._getOptions(),...e})}async initializeContract(e){return Yl.initialize(this._getOptions(e))}}Object.assign(cc.prototype,Ze(lc,(e=>{let[t,r]=e;return[t,function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];t.length=r.length;const a=t[t.length-1];return t[t.length-1]=this._getOptions(a),r(...t)}]})));const dc=cc;var uc=dc;class mc extends uc{constructor(){let{nodes:e=[],...t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),(0,S.Z)(this,"pool",new Map),e.forEach(((e,t)=>{let{name:r,instance:n}=e;return this.addNode(r,n,0===t)}))}get compilerApi(){if(null==this._options.onCompiler)throw new b("You can't use Compiler API. Compiler is not ready!");return this._options.onCompiler}get api(){return this.ensureNodeConnected(),this.pool.get(this.selectedNodeName)}addNode(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(this.pool.has(e))throw new ue(e);this.pool.set(e,t),(r||null==this.selectedNodeName)&&this.selectNode(e)}selectNode(e){if(!this.pool.has(e))throw new me(`Node with name ${e} not in pool`);this.selectedNodeName=e}isNodeConnected(){return null!=this.selectedNodeName}ensureNodeConnected(){if(!this.isNodeConnected())throw new me("You can't use Node API. Node is not connected or not defined!")}async getNodeInfo(){return this.ensureNodeConnected(),{name:this.selectedNodeName,...await this.api.getNodeInfo()}}async getNodesInPool(){return Promise.all(Array.from(this.pool.entries()).map((async e=>{let[t,r]=e;return{name:t,...await r.getNodeInfo()}})))}addresses(){return[]}_resolveAccount(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._options.onAccount;if("string"===typeof e)throw new B("Address in AccountResolver");if("object"===typeof e)return e;throw new R(`Account should be an address (ak-prefixed string), or instance of AccountBase, got ${String(e)} instead`)}get address(){return this._resolveAccount().address}async sign(e){let{onAccount:t,...r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this._resolveAccount(t).sign(e,r)}async signTransaction(e){let{onAccount:t,...r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=null!==this.selectedNodeName?await this.api.getNetworkId():void 0;return this._resolveAccount(t).signTransaction(e,{networkId:n,...r})}async signMessage(e){let{onAccount:t,...r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this._resolveAccount(t).signMessage(e,r)}async signTypedData(e,t){let{onAccount:r,...n}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this._resolveAccount(r).signTypedData(e,t,n)}_getOptions(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{...this._options,onNode:ic((()=>this.api)),onCompiler:ic((()=>this.compilerApi)),...e,onAccount:ic((()=>this._resolveAccount(e.onAccount)))}}}class pc extends mc{constructor(){let{accounts:e,...t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),(0,S.Z)(this,"accounts",{}),null===e||void 0===e||e.forEach(((e,t)=>this.addAccount(e,{select:0===t})))}_resolveAccount(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.selectedAddress;if("string"===typeof e){const t=e;if(gt(t),null==this.accounts[t])throw new F(e);e=this.accounts[t]}return super._resolveAccount(e)}addresses(){return Object.keys(this.accounts)}addAccount(e){let{select:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{address:r}=e;this.accounts[r]=e,!0===t&&this.selectAccount(r)}removeAccount(e){if(null==this.accounts[e])throw new F(e);delete this.accounts[e],this.selectedAddress===e&&delete this.selectedAddress}selectAccount(e){if(gt(e),null==this.accounts[e])throw new F(e);this.selectedAddress=e}}function hc(e,t){gc(e,t),t.add(e)}function yc(e,t,r){gc(e,t),t.set(e,r)}function gc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function fc(e,t,r){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return r}var Nc=new WeakMap,Cc=new WeakMap,Sc=new WeakMap,wc=new WeakSet,zc=new WeakSet,vc=new WeakSet,Tc=new WeakSet;class bc{constructor(e,t,r){hc(this,Tc),hc(this,vc),hc(this,zc),hc(this,wc),yc(this,Nc,{writable:!0,value:new Map}),yc(this,Cc,{writable:!0,value:0}),yc(this,Sc,{writable:!0,value:void 0}),this.connection=e,(0,Jr.Z)(this,Sc,r),e.connect(fc(this,wc,xc).bind(this),t)}async request(e,t){return fc(this,zc,qc).call(this,(0,Jr.Z)(this,Cc,(0,Yr.Z)(this,Cc)+1),e,t),new Promise(((e,t)=>{(0,Yr.Z)(this,Nc).set((0,Yr.Z)(this,Cc),{resolve:e,reject:t})}))}notify(e,t){fc(this,zc,qc).call(this,void 0,e,t)}}async function xc(e,t){if("2.0"!==(null===e||void 0===e?void 0:e.jsonrpc))throw new U(JSON.stringify(e));if("result"in e||"error"in e)return void fc(this,Tc,Ac).call(this,e);const r=e;let n,a;try{if(!(r.method in(0,Yr.Z)(this,Sc)))throw new Be;const e=r.method;n=await(0,Yr.Z)(this,Sc)[e](r.params,t)}catch(i){Ye(i),a=i}if(null!=r.id&&fc(this,vc,Pc).call(this,r.id,r.method,n,null==a||a instanceof Ae?a:new Re),null!=a&&!(a instanceof Ae))throw a}function qc(e,t,r){this.connection.sendMessage({jsonrpc:"2.0",...null!=e?{id:e}:{},method:t,...null!=r?{params:r}:{}})}function Pc(e,t,r,n){this.connection.sendMessage({jsonrpc:"2.0",id:e,method:t,...null!=n?{error:n.toJSON()}:{result:r}})}function Ac(e){let{id:t,error:r,result:n}=e;const a=(0,Yr.Z)(this,Nc).get(t);if(null==a)throw new Z(t);null!=r?a.reject(Ae.deserialize(r)):a.resolve(n),(0,Yr.Z)(this,Nc).delete(t)}const _c=1;var Ic=r(9401);const kc=Ic({storeAsString:!0}),Oc=e=>{if("object"===typeof e&&null!==e&&e.constructor===Object)return Ze(e,(e=>{let[t,r]=e;return[t,Oc(r)]}));if(Array.isArray(e))return e.map((e=>Oc(e)));if("string"===typeof e&&new Dt.Z(e).toString(10)===e){const t=new Dt.Z(e);return t.toJSON=()=>t.toString(10),t}return e};var Ec={stringify:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return kc.stringify(Oc(t[0]),...t.slice(1))},parse:kc.parse};const{Buffer:Mc}=$e;class Rc extends pc{constructor(e){let{name:t,id:r,type:n,onConnection:a,onSubscription:i,onDisconnect:s,onAskAccounts:o,...l}=e;super(l),(0,S.Z)(this,"_clients",new Map),this.onConnection=a,this.onSubscription=i,this.onDisconnect=s,this.onAskAccounts=o,this.name=t,this.id=r,this._type=n}_pushAccountsToApps(){null!=this._clients&&Array.from(this._clients.keys()).filter((e=>this._isRpcClientSubscribed(e))).map((e=>this._getClient(e).rpc)).forEach((e=>e.notify(xe.updateAddress,this.getAccounts())))}selectAccount(e){super.selectAccount(e),this._pushAccountsToApps()}addAccount(e,t){super.addAccount(e,t),this._pushAccountsToApps()}_getNode(){return this.ensureNodeConnected(),{node:{url:this.api.$host,name:this.selectedNodeName}}}async selectNode(e){super.selectNode(e);const t=await this.api.getNetworkId();Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).forEach((e=>{e.rpc.notify(xe.updateNetwork,{networkId:t,...e.connectNode&&this._getNode()})}))}_getClient(e){const t=this._clients.get(e);if(null==t)throw new W(e);return t}_isRpcClientSubscribed(e){return this._isRpcClientConnected(e)&&0!==this._getClient(e).addressSubscription.size}_isRpcClientConnected(e){return qe.CONNECTED===this._getClient(e).status&&this._getClient(e).rpc.connection.isConnected()}_disconnectRpcClient(e){const t=this._getClient(e);t.rpc.connection.disconnect(),t.status=qe.DISCONNECTED,t.addressSubscription=new Set}removeRpcClient(e){this._disconnectRpcClient(e),this._clients.delete(e)}addRpcClient(e){const t=(0,Va.Z)();let r;const n={id:t,status:qe.WAITING_FOR_CONNECTION_REQUEST,addressSubscription:new Set,connectNode:!1,rpc:new bc(e,(()=>{this._clients.delete(t),this.onDisconnect(t,r)}),{[xe.closeConnection]:e=>{r=e,this._disconnectRpcClient(t)},[xe.connect]:async(e,r)=>{let{name:a,version:i,icons:s,connectNode:o}=e;if(i!==_c)throw new ke;return await this.onConnection(t,{name:a,icons:s,connectNode:o},r),n.status=qe.CONNECTED,n.connectNode=o,{...await this.getWalletInfo(),...o&&this._getNode()}},[xe.subscribeAddress]:async(e,r)=>{let{type:a,value:i}=e;if(!this._isRpcClientConnected(t))throw new Ee;switch(await this.onSubscription(t,{type:a,value:i},r),a){case be.subscribe:n.addressSubscription.add(i);break;case be.unsubscribe:n.addressSubscription.delete(i);break;default:throw new D(`Unknown subscription type: ${a}`)}return{subscription:Array.from(n.addressSubscription),address:this.getAccounts()}},[xe.address]:async(e,r)=>{if(!this._isRpcClientSubscribed(t))throw new Ee;return await this.onAskAccounts(t,e,r),this.addresses()},[xe.sign]:async(e,r)=>{let{tx:n,onAccount:a=this.address,returnSigned:i,innerTx:s}=e;if(!this._isRpcClientConnected(t))throw new Ee;if(!this.addresses().includes(a))throw new Me(a);const o={onAccount:a,aeppOrigin:r,aeppRpcClientId:t,innerTx:s};if(i||!0===s)return{signedTransaction:await this.signTransaction(n,o)};try{return Ec.parse(Ec.stringify({transactionHash:await this.sendTransaction(n,{...o,verify:!1})}))}catch(l){const e=await Qo(n,this.api);if(e.length>0)throw new _e(e);throw l}},[xe.signMessage]:async(e,r)=>{let{message:n,onAccount:a=this.address}=e;if(!this._isRpcClientConnected(t))throw new Ee;if(!this.addresses().includes(a))throw new Me(a);const i={onAccount:a,aeppOrigin:r,aeppRpcClientId:t};return{signature:Mc.from(await this.signMessage(n,i)).toString("hex")}},[xe.signTypedData]:async(e,r)=>{let{domain:n,aci:a,data:i,onAccount:s=this.address}=e;if(!this._isRpcClientConnected(t))throw new Ee;if(!this.addresses().includes(s))throw new Me(s);const o={...n,onAccount:s,aeppOrigin:r,aeppRpcClientId:t};return{signature:await this.signTypedData(i,a,o)}}})};return this._clients.set(t,n),t}async shareWalletInfo(e){this._getClient(e).rpc.notify(xe.readyToConnect,await this.getWalletInfo())}async getWalletInfo(){return{id:this.id,name:this.name,networkId:await this.api.getNetworkId(),origin:window.location.origin,type:this._type}}getAccounts(){return{current:null!=this.selectedAddress?{[this.selectedAddress]:{}}:{},connected:this.addresses().filter((e=>e!==this.selectedAddress)).reduce(((e,t)=>({...e,[t]:{}})),{})}}}const Bc={type:{name:"Composite",className:"Contract",modelProperties:{code:{serializedName:"code",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},$c={type:{name:"Composite",className:"CompileOpts",modelProperties:{fileSystem:{serializedName:"file_system",type:{name:"Dictionary",value:{type:{name:"any"}}}},srcFile:{serializedName:"src_file",type:{name:"String"}}}}},Dc={type:{name:"Composite",className:"Aci",modelProperties:{encodedAci:{serializedName:"encoded_aci",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}},externalEncodedAci:{serializedName:"external_encoded_aci",type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}},interface:{serializedName:"interface",required:!0,type:{name:"String"}}}}},Vc={type:{name:"Composite",className:"CompilerError",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},pos:{serializedName:"pos",type:{name:"Composite",className:"ErrorPos"}},message:{serializedName:"message",required:!0,type:{name:"String"}},context:{serializedName:"context",type:{name:"String"}}}}},Fc={type:{name:"Composite",className:"ErrorPos",modelProperties:{file:{serializedName:"file",type:{name:"String"}},line:{serializedName:"line",required:!0,type:{name:"Number"}},col:{serializedName:"col",required:!0,type:{name:"Number"}}}}},Hc={type:{name:"Composite",className:"CompileResult",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},aci:{serializedName:"aci",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},jc={type:{name:"Composite",className:"SophiaCallResultInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},Gc={type:{name:"Composite",className:"BytecodeCallResultInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},Uc={type:{name:"Composite",className:"DecodedCallresult",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},Zc={type:{name:"Composite",className:"FunctionCallInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Wc={type:{name:"Composite",className:"Calldata",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}}}}},Kc={type:{name:"Composite",className:"DecodeCalldataBytecode",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Qc={type:{name:"Composite",className:"DecodedCalldata",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},Lc={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}}}}},Jc={type:{name:"Composite",className:"DecodeCalldataSource",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}}}}},Yc={type:{name:"Composite",className:"ByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Xc={type:{name:"Composite",className:"FateAssembler",modelProperties:{fateAssembler:{serializedName:"fate-assembler",required:!0,type:{name:"String"}}}}},ed={type:{name:"Composite",className:"ValidateByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},td={type:{name:"Composite",className:"CompilerVersion",modelProperties:{version:{serializedName:"version",required:!0,type:{name:"String"}}}}},rd={type:{name:"Composite",className:"ApiVersion",modelProperties:{apiVersion:{serializedName:"api-version",required:!0,type:{name:"String"}}}}},nd={type:{name:"Composite",className:"SophiaBinaryData",modelProperties:{sophiaType:{serializedName:"sophia-type",required:!0,type:{name:"String"}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},ad={type:{name:"Composite",className:"SophiaJsonData",modelProperties:{data:{serializedName:"data",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},id={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},sd={parameterPath:"body",mapper:Bc},od={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},ld={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},cd={parameterPath:"body",mapper:jc},dd={parameterPath:"body",mapper:Gc},ud={parameterPath:"body",mapper:Zc},md={parameterPath:"body",mapper:Kc},pd={parameterPath:"body",mapper:Jc},hd={parameterPath:"body",mapper:Yc},yd={parameterPath:"body",mapper:ed};class gd extends Ka.S{constructor(e,t){var r,n;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const a={requestContentType:"application/json; charset=utf-8"},i="azsdk-js-compiler/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`,o={...a,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(r=null!==(n=t.endpoint)&&void 0!==n?n:t.baseUri)&&void 0!==r?r:"{$host}"};super(o),this.$host=e}generateACI(e,t){return this.sendOperationRequest({body:e,options:t},Nd)}compileContract(e,t){return this.sendOperationRequest({body:e,options:t},Cd)}decodeCallResult(e,t){return this.sendOperationRequest({body:e,options:t},Sd)}decodeCallResultBytecode(e,t){return this.sendOperationRequest({body:e,options:t},wd)}encodeCalldata(e,t){return this.sendOperationRequest({body:e,options:t},zd)}decodeCalldataBytecode(e,t){return this.sendOperationRequest({body:e,options:t},vd)}decodeCalldataSource(e,t){return this.sendOperationRequest({body:e,options:t},Td)}getFateAssemblerCode(e,t){return this.sendOperationRequest({body:e,options:t},bd)}validateByteCode(e,t){return this.sendOperationRequest({body:e,options:t},xd)}getCompilerVersion(e,t){return this.sendOperationRequest({body:e,options:t},qd)}version(e){return this.sendOperationRequest({options:e},Pd)}apiVersion(e){return this.sendOperationRequest({options:e},Ad)}api(e){return this.sendOperationRequest({options:e},_d)}}const fd=Qa.Q(c,!1),Nd={path:"/aci",httpMethod:"POST",responses:{200:{bodyMapper:Dc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:sd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},Cd={path:"/compile",httpMethod:"POST",responses:{200:{bodyMapper:Hc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:sd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},Sd={path:"/decode-call-result",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"any"}}},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:cd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},wd={path:"/decode-call-result/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:Uc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:dd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},zd={path:"/encode-calldata",httpMethod:"POST",responses:{200:{bodyMapper:Wc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:ud,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},vd={path:"/decode-calldata/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:Qc},400:{bodyMapper:Lc,isError:!0}},requestBody:md,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},Td={path:"/decode-calldata/source",httpMethod:"POST",responses:{200:{bodyMapper:Qc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:pd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},bd={path:"/fate-assembler",httpMethod:"POST",responses:{200:{bodyMapper:Xc},400:{bodyMapper:Lc,isError:!0}},requestBody:hd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},xd={path:"/validate-byte-code",httpMethod:"POST",responses:{200:{},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:yd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},qd={path:"/compiler-version",httpMethod:"POST",responses:{200:{bodyMapper:td},400:{bodyMapper:Lc,isError:!0}},requestBody:hd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},Pd={path:"/version",httpMethod:"GET",responses:{200:{bodyMapper:td},500:{bodyMapper:Lc,isError:!0}},urlParameters:[ld],headerParameters:[od],serializer:fd},Ad={path:"/api-version",httpMethod:"GET",responses:{200:{bodyMapper:rd},500:{bodyMapper:Lc,isError:!0}},urlParameters:[ld],headerParameters:[od],serializer:fd},_d={path:"/api",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Dictionary",value:{type:{name:"any"}}}}},400:{bodyMapper:Lc,isError:!0}},urlParameters:[ld],headerParameters:[od],serializer:fd};class Id{}class kd extends Id{constructor(e){let{ignoreVersion:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(super(),this.api=new gd(e,{allowInsecureConnection:!0,additionalPolicies:[Ua((e=>{let t="";return"reason"in e&&(t+=` ${e.reason}${null!=e.parameter?` in ${e.parameter}`:""}${null!=e.info?` (${JSON.stringify(e.info)})`:""}`),Array.isArray(e)&&(t+=`\n${e.map((e=>`${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${null!=e.context?` (${e.context})`:""}`)).join("\n")}`),t}))]}),!0!==t){const e=this.api.apiVersion().then((e=>{let{apiVersion:t}=e;return t}),(e=>e));this.api.pipeline.addPolicy(Za("compiler","/api-version",e,"7.1.1","8.0.0"))}}async compileBySourceCode(e,t){try{const r=await this.api.compileContract({code:e,options:{fileSystem:t}});return r}catch(r){if(r instanceof je.o&&400===r.statusCode)throw new b(r.message.replace(/^aci error:/,"compile error:"));throw r}}async compile(e){throw new B("File system access, use CompilerHttpNode instead")}async validateBySourceCode(e,t,r){try{return await this.api.validateByteCode({bytecode:e,source:t,options:{fileSystem:r}}),!0}catch{return!1}}async validate(e,t){throw new B("File system access, use CompilerHttpNode instead")}async version(){return(await this.api.version()).version}}class Od{constructor(e){let{debug:t=!1}=e;this.debug=t}connect(e,t){if(this.isConnected())throw new Se("You already connected")}disconnect(){if(!this.isConnected())throw new we("You dont have connection. Please connect before")}receiveMessage(e){this.debug&&console.log("Receive message:",e)}sendMessage(e){this.debug&&console.log("Send message:",e)}}function Ed(e,t,r){Md(e,t),t.set(e,r)}function Md(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}var Rd=new WeakMap,Bd=new WeakMap,$d=new WeakMap;class Dd extends Od{constructor(){let{target:e,self:t=window,origin:r,sendDirection:n,receiveDirection:a=ve.to_aepp,...i}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(i),Ed(this,Rd,{writable:!0,value:void 0}),Ed(this,Bd,{writable:!0,value:void 0}),Ed(this,$d,{writable:!0,value:void 0}),(0,Jr.Z)(this,Bd,e),(0,Jr.Z)(this,$d,t),this.origin=r,this.sendDirection=n,this.receiveDirection=a}isConnected(){return null!=this.listener}connect(e,t){super.connect(e,t),this.listener=t=>{var r,n;if("object"!==typeof t.data||"2.0"!==(null!==(r=t.data.jsonrpc)&&void 0!==r?r:null===(n=t.data.data)||void 0===n?void 0:n.jsonrpc))return;if(null!=this.origin&&this.origin!==t.origin)return;if(null!=(0,Yr.Z)(this,Bd)&&(0,Yr.Z)(this,Bd)!==t.source)return;this.receiveMessage(t);let{data:a}=t;if(null!=a.type){if(t.data.type!==this.receiveDirection)return;a=a.data}e(a,t.origin,t.source)},(0,Yr.Z)(this,$d).addEventListener("message",this.listener),(0,Jr.Z)(this,Rd,t)}disconnect(){if(super.disconnect(),null==this.listener||null==(0,Yr.Z)(this,Rd))throw new D("Expected to not happen, required for TS");(0,Yr.Z)(this,$d).removeEventListener("message",this.listener),delete this.listener,(0,Yr.Z)(this,Rd).call(this),(0,Jr.Z)(this,Rd,void 0)}sendMessage(e){var t;if(null==(0,Yr.Z)(this,Bd))throw new ze("Can't send messages without target");const r=null!=this.sendDirection?{type:this.sendDirection,data:e}:e;super.sendMessage(r),(0,Yr.Z)(this,Bd).postMessage(r,null!==(t=this.origin)&&void 0!==t?t:"*")}}function Vd(e,t,r,n,a,i){return(0,u.wg)(),(0,u.iD)("div",{class:(0,m.C_)({error:e.error})},(0,m.zw)(e.text),3)}var Fd={props:{value:{type:[Object,Array,String,Number,Promise],default:null}},data:()=>({text:"",error:!1}),watch:{value:{async handler(e){e?.then?(this.text="Waiting for resolving",this.error=!1,this.text=await e.then((e=>this.valueToString(e)),(e=>(console.warn(e),this.error=!0,e)))):this.text=this.valueToString(e)},immediate:!0}},methods:{valueToString(e){return"object"!==typeof e?e:JSON.stringify(e,((e,t)=>"bigint"===typeof t?`${t} (as BigInt)`:t),2)}}},Hd=r(3744);const jd=(0,Hd.Z)(Fd,[["render",Vd]]);var Gd=jd,Ud={components:{Value:Gd},data:()=>({aeppUrl:"../aepp/",runningInFrame:window.parent!==window,nodeName:"",address:"",balancePromise:null}),methods:{async shareWalletInfo(e,{interval:t=5e3,attemps:r=5}={}){this.aeSdk.shareWalletInfo(e);while(r)await new Promise((e=>{setTimeout(e,t)})),this.aeSdk.shareWalletInfo(e),r-=1;console.log("Finish sharing wallet info")},disconnect(){Object.values(this.aeSdk.rpcClients).forEach((e=>{e.notify(xe.closeConnection),e.disconnect()}))},async switchAccount(){this.address=this.aeSdk.addresses().find((e=>e!==this.address)),this.aeSdk.selectAccount(this.address)},async switchNode(){this.nodeName=(await this.aeSdk.getNodesInPool()).map((({name:e})=>e)).find((e=>e!==this.nodeName)),this.aeSdk.selectNode(this.nodeName)}},mounted(){const e={},t=t=>(r,n,a)=>{if(!confirm([`Client ${e[r].name} with id ${r} at ${a} want to ${t}`,Gd.methods.valueToString(n)].join("\n")))throw new Ie};class r extends Da{async signTransaction(e,{aeppRpcClientId:r,aeppOrigin:n,...a}={}){if(null!=r){const i={...a,unpackedTx:Oa(e)};i.onCompiler&&(i.onCompiler="<Compiler>"),i.onNode&&(i.onNode="<Node>"),t(`sign transaction ${e}`)(r,i,n)}return super.signTransaction(e,a)}async signMessage(e,{aeppRpcClientId:r,aeppOrigin:n,...a}={}){return null!=r&&t(`sign message ${e}`)(r,a,n),super.signMessage(e,a)}async signTypedData(e,r,{aeppRpcClientId:n,aeppOrigin:a,...i}){if(null!=n){const s={...i,aci:r,decodedData:Mt(e,r)};t(`sign typed data ${e}`)(n,s,a)}return super.signTypedData(e,r,i)}static generate(){return new r(Tt().secretKey)}}let n;this.aeSdk=new Rc({id:window.origin,type:Te.window,nodes:[{name:"ae_uat",instance:new Fo("https://testnet.aeternity.io")},{name:"ae_mainnet",instance:new Fo("https://mainnet.aeternity.io")}],accounts:[new r("9ebd7beda0c79af72a42ece3821a56eff16359b6df376cf049aee995565f022f840c974b97164776454ba119d84edc4d6058a8dec92b6edc578ab2d30b4c4200"),r.generate()],onCompiler:new kd("https://v7.compiler.aepps.com"),name:"Wallet Iframe",onConnection:(t,r,n)=>{if(!confirm(`Client ${r.name} with id ${t} at ${n} want to connect`))throw new Oe;e[t]=r},onSubscription:t("subscription"),onAskAccounts:t("get accounts"),onDisconnect(){this.shareWalletInfo(n)}}),this.nodeName=this.aeSdk.selectedNodeName,[this.address]=this.aeSdk.addresses();const a=this.runningInFrame?window.parent:this.$refs.aepp.contentWindow,i=new Dd({target:a});n=this.aeSdk.addRpcClient(i),this.shareWalletInfo(n),this.$watch((({address:e,nodeName:t})=>[e,t]),(([e])=>{this.balancePromise=this.aeSdk.getBalance(e)}),{immediate:!0})}};const Zd=(0,Hd.Z)(Ud,[["render",C]]);var Wd=Zd;(0,d.ri)(Wd).mount("#app")},3673:function(){}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}r.m=e,function(){var e=[];r.O=function(t,n,a,i){if(!n){var s=1/0;for(d=0;d<e.length;d++){n=e[d][0],a=e[d][1],i=e[d][2];for(var o=!0,l=0;l<n.length;l++)(!1&i||s>=i)&&Object.keys(r.O).every((function(e){return r.O[e](n[l])}))?n.splice(l--,1):(o=!1,i<s&&(s=i));if(o){e.splice(d--,1);var c=a();void 0!==c&&(t=c)}}return t}i=i||0;for(var d=e.length;d>0&&e[d-1][2]>i;d--)e[d]=e[d-1];e[d]=[n,a,i]}}(),function(){r.d=function(e,t){for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}}(),function(){r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={143:0};r.O.j=function(t){return 0===e[t]};var t=function(t,n){var a,i,s=n[0],o=n[1],l=n[2],c=0;if(s.some((function(t){return 0!==e[t]}))){for(a in o)r.o(o,a)&&(r.m[a]=o[a]);if(l)var d=l(r)}for(t&&t(n);c<s.length;c++)i=s[c],r.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return r.O(d)},n=self["webpackChunkwallet_iframe"]=self["webpackChunkwallet_iframe"]||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var n=r.O(void 0,[998],(function(){return r(4395)}));n=r.O(n)})();
//# sourceMappingURL=app.c9e34030.js.map